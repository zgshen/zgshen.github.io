<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zguishen&#39;s blog</title>
  
  
  <link href="https://zguishen.com/atom.xml" rel="self"/>
  
  <link href="https://zguishen.com/"/>
  <updated>2025-07-20T14:54:22.382Z</updated>
  <id>https://zguishen.com/</id>
  
  <author>
    <name>zguishen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>潮汕三市</title>
    <link href="https://zguishen.com/posts/acc32945.html"/>
    <id>https://zguishen.com/posts/acc32945.html</id>
    <published>2025-03-14T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>在上一辈人，大多人更喜欢说我是潮州人，讲潮汕话，不知道从什么时候开始，潮汕人&#x2F;潮汕话的概念流行起来了，现今事实也是三市分家潮汕这个概念也算是稳定下来了。</p><span id="more"></span><p>每年往返于省城和粤东之间，家刚好是在潮汕三市中心，高铁站和机场都修在附近。从中学开始，初中的时候骑车到镇上去读书，高中骑车到县上去读书，沿路都会经过建筑工地，可以说是一点一点看着高速公路、高铁站和机场修起来了。之后到省城上学的时候也坐上高铁了，也看着抢铁省城东站到潮汕站的车票从160多涨到200出头。<br><img src="https://i.zguishen.com/2025/03/ac94892a4222bf09cbed5695475e8732.jpg"></p><p>要说对潮汕三市的印象，小时候印象更多的还是潮州，虽然家是在揭阳的，但是一河之隔就是潮安了，语言和风俗习惯更接近潮州，经常听的电台是潮州台看的电视台也是潮州台，很小的时候就去过潮州市区，知道潮州八景。</p><p>后来到揭东县城上学才去过揭阳市区，总感觉如果不是上学工作、做生意或者旅行的缘故，普通人一般都是在一个地方一辈子，大学我的下铺哥们虽然也是揭阳的，但是他是揭西了，从来没有去过揭阳市区，聊起来也是震惊了呵。</p><p><img src="https://i.zguishen.com/2025/03/926ab2632cf35ef8f126edce50db503d.jpg" alt="古城街道"></p><p>在跟我哥做生意的时候，经常要出门发展客户，每天都是开车在潮汕三市跑业务，我也会跟着帮忙，严格来说只是陪着大哥一起出门有个伴路上没那么无聊而已，我基本上帮不上什么忙。在那段时期整天都是三市穿梭，汕头那边也去得多，因为主要客户在汕头。以前很难想象汕头一个经济特区能破烂成那样，路都是烂的，全是小作坊，特别是后来去过广州和深圳之后再看汕头，城市建设简直就是惨不忍睹。不过随着大基建时代的到来，各地的城市建设更新了好多，近几年去过汕头跟小时候印象好了很多，应该说三市都是这样。</p><p><img src="https://i.zguishen.com/2025/03/b3695540bd6ac7df822797c9c24f0be0.jpg"></p><p>这次春节回家还去了南澳岛，不出意外进岛又是堵车，意外的是春节期间有好多省外游客来潮汕旅行，到处都堵车了。进南澳岛有一半的车都是省外牌，其中又以江浙的车最多，很神奇，不知道为什么江浙人喜欢来这个地方旅行。</p><p><img src="https://i.zguishen.com/2025/03/b7ef23e5042d289d8d7457813580e336.jpg"></p><p>在看了小红书和抖音各种媒体才知道那些网红和文旅宣传得厉害，很多都说来广东找吃的要到顺德，要到潮汕。不得不说，潮汕好吃的是不少，牛肉火锅牛肉粿条，卤鸭卤鹅，各式各样的小吃非常多。不过另一方面也看到很多不负责的宣传，很多外地人来吃生腌，结果肚子痛腹泻进医院急诊，看到外地人点那么多生腌不要命地吃真是两眼一黑。在潮汕找吃的有两个基本原则，一个要问清楚价格避免被宰，而是不要生腌，肠胃不好容易出事，真的喜欢吃也只能吃一点点，而且必须配粥吃。</p><p>不想写了，等有想法的时候再写一些关于潮汕的回忆吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在上一辈人，大多人更喜欢说我是潮州人，讲潮汕话，不知道从什么时候开始，潮汕人&amp;#x2F;潮汕话的概念流行起来了，现今事实也是三市分家潮汕这个概念也算是稳定下来了。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>香港石澳</title>
    <link href="https://zguishen.com/posts/a5d20d57.html"/>
    <id>https://zguishen.com/posts/a5d20d57.html</id>
    <published>2024-11-12T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>双十这天去了香港走走，顺带拿个镜头，本来没什么目的地，随便走走，不过石澳这个海边村庄风景真的很好，不同于尖沙咀这些经典景点，一些小地方更能给人不一样的体验。</p><span id="more"></span><p>出门依然是中旅的巴士，高铁老感觉太大怨种了，省港这点距离的票价甚至比香港到潮汕家里的票价还贵，只能说离谱......其实巴士也不算很慢，天河到深圳湾过关再到尖沙咀也就两个半小时，巴士可以算是大湾区单人出行性价比高的交通工具了。</p><p>到深圳湾过关可以看到深圳的春笋大厦，白天看起来也像颗银弹，挺好看的，这次忘了拍照了，上次来是23年了。<br><img src="https://i.zguishen.com/2024/11/36e7c87270219541b19f7f2bd00e1d89.jpg" alt="2023年的春笋大厦"></p><p>过海关后上车本来要在旺角下车的，结果一不小心反应过来已经在维港上了，然后就直接上环下车到坚尼地城走一圈再吃个麦麦。香港的麦麦有时候会有打折的，折后比内地还便宜，不过普通套餐还是贵，板烧中套餐要约￥40，另外有些东西是内地没有的比如热香饼和奶昔等等。吃完麦麦过海到旺角拿相机镜头，问路的时候用蹩脚的白话交流，虽然说得不行但是香港这边的人还是愿意继续跟你讲白话，省城这边跟大爷大妈说几句粤语一听我口音就自动开始煲冬瓜了呵，想多讲几句白话练习都没机会，不过这也是融合发展的趋势，方言的生存空间逐步被压缩。</p><p>在大时代摄影器材拿的镜头是<a href="https://www.tamron.com.cn/cameralens/products/b061/index.shtml">腾龙18300</a>，港水无保修相当于是放弃保修换点钱了，七天之内有问题可以去店里售后，算下来镜头刚好是三千，现在的汇率没以前好了，但也算还行。腾龙这大变焦头装到小机身相机就有点不太协调了，感觉小机身装了大镜头就完全放弃了便携性了，那当时为什么要买这种小相机&gt;_&lt;?。<br><img src="https://i.zguishen.com/2024/11/a55a29d11f267299d3eda900181b860a.jpg" alt="索尼ZV-E10 + 腾龙18-300mm"></p><p>买了镜头就出发去石澳村了，路过旺角站旁的窝打老道，这里是<a href="https://movie.douban.com/subject/1304624/">《旺角卡门》</a>取景地，乌蝇哥卖鱼蛋的地方，拍照的地方这边是<a href="https://zh.wikipedia.org/wiki/%E6%B2%B9%E9%BA%BB%E5%9C%B0%E6%88%B2%E9%99%A2">油麻地戏院</a>，忘记拍照了......<br><img src="https://i.zguishen.com/2024/11/9bf3816e14b15d6293d666d93187556a.jpg" alt="今日我係呢度卖鱼蛋，第日我係中东卖飞弹。"></p><p>地铁到筲箕湾站下，走出地铁口刚好看到去石澳的红Van，既然碰到当然要做，现在的小巴没有以前传说的那么疯狂了，什么夺命小巴，时速随便上百，那部《那夜凌晨，我坐上了旺角开往大埔的红Van》电影还没看，得找个时间看看。<br><img src="https://i.zguishen.com/2024/11/253bee36d7baaa9a23543cd5a122fa89.jpg" alt="时速75的红Van"></p><p>来港的游客大多都会去尖沙咀和中环这些繁华交通方便的地方，像石澳村这样远一点的地方游客就比较少了，所以石澳村里也比较安静。石澳村还是《喜剧之王》的取景地，村里有很多拍照打卡地点。</p><p><img src="https://i.zguishen.com/2024/11/9f34afbaeb9b9d90976cd99750b50744.jpg" alt="《喜剧之王》我养你啊！"></p><p>海边的沙滩，晒太阳的还是外国人多，国人不太喜欢晒太阳。</p><p><img src="https://i.zguishen.com/2024/11/0b9e8dbda2b53ae065e3dc150b54f65e.jpg"></p><p><img src="https://i.zguishen.com/2024/11/adf76902f30f6293ac4cec24307a4e89.jpg"></p><p>在村道碰到一群学生，户外活动总是开心的，香港的教育不知道有比内地轻松么。</p><p><img src="https://i.zguishen.com/2024/11/dba692f9e96f60a73c6db9dc53d31c57.jpg"></p><p><img src="https://i.zguishen.com/2024/11/cdc9333782fd7653ce4c0cdf81adec1e.jpg"></p><p>沿着村道走到龙脊入海处，在从筲箕湾到石澳路上中间的土地湾可以爬上龙脊观景台，看到的景色更好，不过我不想爬山小巴直接到石澳的。</p><p><img src="https://i.zguishen.com/2024/11/c493133d1a621a49178137e091832dbb.jpg"></p><p><img src="https://i.zguishen.com/2024/11/69255dd01da45478488502790c1871cb.jpg"></p><p>逛够了做城巴回筲箕湾地铁站。<br><img src="https://i.zguishen.com/2024/11/1a39b3abb3806c75d9a4e2b4a5727aff.jpg"></p><p>做地铁回到尖沙咀，打卡一下重庆大厦，没时间进去逛了，要赶回省城的中旅巴士，说实话省港一日游往返还是挺累的，但是我在小红书看到有人住省城香港上班，只能说一句牛逼。<br><img src="https://i.zguishen.com/2024/11/56ed1a3be7fd37186b1201d9fb9d0fd5.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;双十这天去了香港走走，顺带拿个镜头，本来没什么目的地，随便走走，不过石澳这个海边村庄风景真的很好，不同于尖沙咀这些经典景点，一些小地方更能给人不一样的体验。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>昨日的世界</title>
    <link href="https://zguishen.com/posts/9378c882.html"/>
    <id>https://zguishen.com/posts/9378c882.html</id>
    <published>2024-10-31T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们命该遇到这样的时代。</p></blockquote><span id="more"></span><p>之前读过<a href="https://book.douban.com/subject/1083762/">《人类的群星闪耀时》</a>，所以去维基了解了作者茨威格的生平，看到作者还写过一本回忆录<a href="https://book.douban.com/subject/4238162/">《昨日的世界：一个欧洲人的回忆》</a>，严格来说不是回忆录，不过内容已经超越了一般的回忆录，因为内容不仅包括了作者本身的生平，还介绍了同时期人物和人物在重大历史事件下经历，由此作品我们得以从以一个亲历者的角度来了解两次世界大战及之前的欧洲。茨威格在写完这本书之后不久就选择自杀了，更让人好奇他的个人经历和对于所处周遭世界的看法。</p><p>要说这本书有什么吸引人的地方，那就是它以一个欧洲人的角度去看待两次世界大战时期的欧洲是什么样子的。区别于传统严肃的历史文献，历史文献只记录宏观上的大事件，这是属于集体的记录，而个体在历史事件下的视角对于普通人来说更有真实感。特别是借作者的视角看哪个时代，再看现在的时代，有些东西还是没有改变，能产生共鸣。</p><p>比如作者的教育经历，说到自己小学和中学生活，枯燥程度居然和今天中国的应试教育差不多。当茨威格感慨20世纪的学生能够独立自由地生活的时候，恐怕无法想象在21世纪的中国走的教育路线跟他的童年时代的教育差不多。应试教育不是为了教育出独立自主的人格，只是为了筛选出当权者需要的工具人而已，“根据那个时代的意向，学校的真正使命与其说是引导我们向前，毋宁说是阻止我们向前；不是把我们培养成为有丰富内心世界的人，而是要我们尽可能百依百顺地去适应既定的社会结构；不是提高我们的能力，而是对我们的能力加以约束和消除能力上的差异”，说得真是一针见血。</p><p>书中描述的一战以前欧洲，维也纳开放的环境，各个国家的经济文化交流，有点上世纪九十年代和世纪初的全球化，那是希望的年代，每个人都自诩为世界公民，但在今天没人会再这样想了，看到更多的是对立，全在看屁股做事。</p><p>“每当我在谈话中向年轻的朋友讲起第一次世界大战前的一些事情时，我从他们突兀的问题中发现，有多少事对我来说还是不言而喻的现实，而对他们来说却已成为历史或者不可思议。但隐藏在我内心的一种本能使我觉得他们的发问是有道理的，因为在我们的今天和我们的昨天与前天之间的一切桥梁都已拆毁”。剧烈变革的年代经常伴随着剧烈的动荡，在工业革命之后的世界变化之快令人难以想象，作为三十岁的人，我也已经很难想象上世纪90代和新世纪之初的穷困了，如今虽然经济下行，但是也很难再出现饿肚子的情况。</p><p>知道他是写这本书不就后自我了断，觉得非常可惜，毕竟那个时间点里二战结束已经不远，但是这是马后炮，当时的人们根本不知道战争什么时候结束，对于一个经历两次世界大战，失去家园，飘零异国，偏偏又是心系全人类的善良人，这种痛苦无法感同身受。而且，现在的世界也不是多美好，局部战争依然没玩没了，像中东和俄乌这样的战争互联网上也吵得不可开交，对立事件每天都能看到，本以为专心写代码可以不用关心这么多，但最近 Linux 社区以合规为由移除了多名俄籍维护者，Linus 的言论也让人感到不爽，似乎科学无国界越来越没人相信了。</p><p>我五月就看完这本书，一直想写些读后感，写了又删，删了又写，很纠结，就像我现在的处境一样，在纠结中啥事都干不成，新工作都没着落，某种意义上说明大环境对人的影响。现在已经不像十年前那样工作那么好找了，离职的找不到新工作，还在公司的继续苟着，害怕某一天被裁员，不做原来的工作又不知道干什么。看完本书后也只能安慰自己一下，情况还没两次世界大战那么烂，不必绝望，树挪死人挪活，换个方向换个城市也许是好出路。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我们命该遇到这样的时代。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="随笔" scheme="https://zguishen.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>风之城</title>
    <link href="https://zguishen.com/posts/75dd7aac.html"/>
    <id>https://zguishen.com/posts/75dd7aac.html</id>
    <published>2024-10-05T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>今天看视频网站无意中看到这部片子<a href="https://movie.douban.com/subject/35412336/">《风之城》</a>，吸引我的是影片的介绍，这是一部蒙古国的电影，因为感觉比较稀奇，所以就看下去了。</p><p>看影片介绍这是发生在乌兰巴托的故事，一说到蒙古国大多数人能知道的可能就首都乌兰巴托，丰富的矿产，历史上的外蒙和内蒙的事件，来自外蒙的沙尘暴。</p><p>虽然说是邻国，但了解的并不多，隐约只知道那里发展水平不是很好，我则是在油管看过一些蒙古国的视频，主要也是说荒漠化问题，朝鲜人曲线逃难到蒙古再到韩国，还有就是看过一期蒙古国电竞行业视频，总感觉这个邻居有一些神秘，不过细想一下，除了日韩好像周边国家都没有那么了解，毕竟他们经济不行文化输出也不行。而影片则能更好地了解一个国家的情况，现代的蒙古国也在搞经济建设，影片就是在这个背景之下制作的。</p><p>看完《风之城》，最大的感想就是这又是一个城市化进程的故事。作为在改革开放中长大的人们，看起来太熟悉了，甚至有点感同身受，只是蒙古国独特的文化和地理特色显得与众不同而已。</p><p>男主角是17岁的学生，也是一个<a href="https://zh.wikipedia.org/wiki/%E8%90%A8%E6%BB%A1%E6%95%99">萨满</a>，不过影片好像没有交代为什么一个这么年轻还在上学的小伙为什么能做萨满。玩过各种游戏和看到各种历史小说，对萨满的形象应该是位德高望重的老者，而且应该是一个智者，虽然不能够像玄幻故事那样真能呼风唤雨，但也应该有些过人之处。而影片的主角只是一个未成年人，不过形象塑造地很好，年轻的萨满请神灵上身，为信徒占卜算命，一点都不含糊，而且对于年轻人身上的叛逆、理想和现实的冲突刻画也很好。在学校当学生也是那种典型好学生，不过好学生同样经受不住诱惑，喜欢玩手机，向往外面的世界，想住在漂亮的公寓中，想永远离开这个落后的环境。外面精彩世界与学校压抑的环境形成对比，最后反抗学校的压抑环境。</p><p>女主角则来自一个父母分居两国的家庭，在这个国家没有朋友，但向往的是草原上生活。在生病时候男主萨满为她做法两人认识，做完心脏手术男主去探望后开始交往。之后两人开始一起疯玩，男主一度沉沦于欲望之中，在做萨满工作时无法跟神灵沟通，也渐渐意识到两个人是属于两个不同的世界，一个向往城中生活而不可得，一个向往草原生活而脱离实际，最后两人还是因为女主要去韩国而分开了，因为她的心她的灵魂不属于这个国家，跟做心脏手术相对应，生在蒙古心不在蒙古。</p><p>剧情中穿插的其他配角也反应了社会问题，男主父母当心儿女的成长问题，男主姐姐开始不信神灵而怀孕后又开始祈求神灵的保佑，邻居大哥被人诬陷偷东西失去工作整天酗酒大醉，连老父亲去世都没有发现...</p><p>最后男主还是重新做萨满的工作，电影的镜头在乌兰巴托的街景中结束。影片还是拍得太意识流了，很多镜头只有画面而对话偏少，一些背景都得靠猜，好在理解上来不太难，毕竟中国的城市化道路现行一步，一些社会问题有相似的模板。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天看视频网站无意中看到这部片子&lt;a href=&quot;https://movie.douban.com/subject/35412336/&quot;&gt;《风之城》&lt;/a&gt;，吸引我的是影片的介绍，这是一部蒙古国的电影，因为感觉比较稀奇，所以就看下去了。&lt;/p&gt;
&lt;p&gt;看影片介绍这是发生在乌</summary>
      
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="随笔" scheme="https://zguishen.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 滚动更新碰到问题记录</title>
    <link href="https://zguishen.com/posts/37465531.html"/>
    <id>https://zguishen.com/posts/37465531.html</id>
    <published>2024-05-20T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>很久没更新Ubuntu系统，更新出了点问题记录一下。</p><span id="more"></span><p>之前禁止了内核更新，最近想更新一下，unhold 了内核版本，重新 apt update 并且 upgrade 更新了下，结果在<code>neofetch</code>看到 OS 信息居然变成了 TONGWANDOU？这才想起之前为了安装国内的一些软件添加的一个源：<a href="https://www.atzlinux.com/allpackages.htm">铜豌豆</a>，结果更新的时候这源不知道加了什么料把系统更新覆盖了，连 grub 都改了...</p><p>因为这源的软件也用不上了，然后我就把这个源移除掉重新更新，好了一更新这个铜豌豆干掉了，但是连系统信息也干掉了，<code>lsb_release -a</code>看到 Ubuntu 直接退成了 Debian，原因是<code>/usr/lib/os-release</code>被删，用 zsh 的时候都提示<code>grep: /etc/os-release: No such file or directory is printed</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l /etc/os-release</span><br><span class="line">lrwxrwxrwx 1 root root 21 Aug  2  2023 /etc/os-release -&gt; ../usr/lib/os-release</span><br></pre></td></tr></table></figure><p>看下<code>/etc/os-release</code>其实是外链到<code>/usr/lib/os-release</code>，所以在<code>/usr/lib/os-release</code>补上系统信息就行了。</p><p><code>vi /usr/lib/os-release</code>编辑文件并输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PRETTY_NAME=<span class="string">&quot;Ubuntu 22.04.4 LTS&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;Ubuntu&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;22.04&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;22.04.4 LTS (Jammy Jellyfish)&quot;</span></span><br><span class="line">VERSION_CODENAME=jammy</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">HOME_URL=<span class="string">&quot;https://www.ubuntu.com/&quot;</span></span><br><span class="line">SUPPORT_URL=<span class="string">&quot;https://help.ubuntu.com/&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span></span><br><span class="line">PRIVACY_POLICY_URL=<span class="string">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span></span><br><span class="line">UBUNTU_CODENAME=jammy</span><br></pre></td></tr></table></figure><p>保存再执行<code>lsb_release -a</code>就能看到正确的Ubuntu信息了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsb_release -a             </span><br><span class="line">LSB Version:core-11.1.0ubuntu4-noarch:security-11.1.0ubuntu4-noarch</span><br><span class="line">Distributor ID:Ubuntu</span><br><span class="line">Description:Ubuntu 22.04.4 LTS</span><br><span class="line">Release:22.04</span><br><span class="line">Codename:jammy</span><br></pre></td></tr></table></figure><p>以后一些奇怪的三方源还是别乱用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;很久没更新Ubuntu系统，更新出了点问题记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://zguishen.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="https://zguishen.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>索尼ZV-E10相机</title>
    <link href="https://zguishen.com/posts/7e283bbf.html"/>
    <id>https://zguishen.com/posts/7e283bbf.html</id>
    <published>2024-05-13T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>之前买过两个松下的卡片机，卡片机非常轻便，出行带上拍拍真不错，但毕竟只是小英寸的底，画质已经跟手机拉不开差距，修图也没啥空间了，所以想换个单反或微单。</p><span id="more"></span><p>一开始是想买个单反的，目前单反的价格已经低了，但是老单反的机身重量真的劝退。专门去了正佳索尼和尼康摸了各种相机，老机器真是笨重，就算是全画幅的微单拿久了手腕也发酸。后来就考虑买一个 M43 画幅或者 APS-C 幅这类更轻便但业余摄影还能玩玩的相机，因为对松下的相机了解比较多，所以一开始看上了松下G95的，但是松下一直迟迟没做活动；尼康Z30是目前入门级C幅网友推荐最多的了，但是现在溢价了官方还难买到；索尼ZV-E10拍照视频都比较均衡，但是做工拍照体验都比Z30差，但是相对便宜，不溢价，容易买到，所以就买了。</p><p>相机到手已经几个月了，都说索尼刀法精准，这段时间使用下来确实名副其实啊，相比较另一款机型α6400少了一些软件功能，α6400拍照体验会好得多。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>先说一下优点：</p><ul><li><p>机身小，塑料材质轻便；</p></li><li><p>侧面翻转屏用什么姿势拍都方便；</p></li><li><p>因为定位是 VLOG 相机，拍视频需要的的接口都给了，Type-C 充电和文件传输，麦克风接口，视频格式 S-Log2 和 S-Log3 都给了；</p></li><li><p>索尼的对焦无需多说，动物眼睛对焦也给了；</p></li><li><p>E卡口副厂镜头是真的多，多便宜多贵都有，丰俭由人。</p></li></ul><h3 id="槽点及解决方案"><a href="#槽点及解决方案" class="headerlink" title="槽点及解决方案"></a>槽点及解决方案</h3><p>就算有再多的优点，如果一个东西的槽点让你无法忍受，那你用着也是很恶心的。索尼 </p><h4 id="机身"><a href="#机身" class="headerlink" title="机身"></a>机身</h4><ul><li><p>塑料小机身是优点也是缺点，塑料质感差，小机身我握持感差，可以加个兔笼这样手感好多了又能保护相机，不过加了兔笼就跟轻便没关系了，而且加上了镜头特别是长焦的也没法轻便了。</p></li><li><p>机身屏幕素质很差，跟手上的松下卡片机对比一下真是两眼一黑，而且这屏幕虽说是触摸屏，但是只能用来对焦和放大缩小，太变态了...有个软件 Monitor+ 可以用来外接手机当成监视器，不过需要 CtoC 的线，IPhone15 以下的机型需要 OTG 转一下才能用，比较麻烦。</p></li><li><p>电池容量小，NP-FW50 都被戏称为废物50，需要多买几块电池。</p></li><li><p>没有取景器，强光下看这个素质这么差的屏幕难受，只能看直方图防止曝光出问题。</p></li><li><p>没有闪光灯，虽然自带闪光灯一般也不好用，热靴口加上外置闪光灯就好了。</p></li><li><p>没有机身防抖，不过有电子防抖，机身有陀螺仪，索尼有提供一个免费软件 <a href="https://www.sony.com/electronics/support/articles/CCCT03000">Catalyst Browse</a> 可以在后期处理陀螺仪数据做到防抖，需要注意的是要把相机的防抖关闭才会自动开启记录陀螺仪数据，不过后期处理会降低一点画质，要更稳定的话需要裁切更多画面，而且在低快门下会有拖影。</p></li><li><p>少了一个模式切换波轮，不过机身的按钮太多都可以自定义，可以设置一个键位来切换模式。</p></li></ul><h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><ul><li><p>软件菜单还是老菜单，操作逻辑混乱，需要自己设置好才顺手一些；</p></li><li><p>4k有超采样，但30帧有裁切，1080P没有超采样，画质很烂；</p></li><li><p>自动ISO不能设置最低快门，想要防止暗光下不糊片比较麻烦，只能用S或M档固定固定下快门了；</p></li><li><p>软件上点测光不能联动对焦点的，只能中心测光，只能曲线救国线先AE锁定曝光再移动换面构图。</p></li></ul><p>这里只说几个个人碰到的缺点问题，因为之前没用过索尼的其他相机，所以感受还没那么深，实际上 ZV-E10 软件上相比 α6400 阉割的东西非常多，主要集中在拍照操控上，<a href="https://www.bilibili.com/video/BV15g411j7cw/">这个视频</a>中UP讲得很详细，拍照还是得选 α6400。</p><h3 id="2024-x2F-07-x2F-21-更新"><a href="#2024-x2F-07-x2F-21-更新" class="headerlink" title="2024&#x2F;07&#x2F;21 更新"></a>2024&#x2F;07&#x2F;21 更新</h3><p>最近索尼更新了 <a href="https://electronics.sony.com/imaging/interchangeable-lens-cameras/aps-c/p/zve10m2b">ZV-E10 II</a>，看了下配置是升级了很多东西，但是偏偏把机械快门砍掉了，不给拍照留活路了，成了纯视频机器了却又不给机身防抖。都说索尼刀法精湛，看来 ZV-E10 一代还是阉割少了，不过二代换了电池型号更大续航更好，手柄也更大更好握持，键位布局更合理，用上新菜单屏幕也能随意触控操作了不想一代只能对焦放大，还有就是给了创意外观。很馋这个四代机的创意外观，刚好在B站看到有人把创意外观做成 Lightroom 的配置文件，老机器在后期也能用上了，具体看这个视频<a href="https://www.bilibili.com/video/BV1pL4y1b7uP">索尼旧菜单机型获得a7m4 全新创意外观滤镜色彩</a>。</p><h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><ul><li>[1]<a href="https://www.sonystyle.com.cn/products/ilc/zv_e10/zv_e10_feature.html">Sony ZV-E10_微单™&#x2F;单电数码相机|报价,价格,配置,详情-索尼中国在线商城</a></li><li>[2]<a href="https://www.bilibili.com/video/BV15g411j7cw/">索尼ZV-E10阉割篇</a></li><li>[3]<a href="https://monitorplus.cc/?lang=zh-hans">Monitor+ 立即将你的手机变成专业监视器</a></li><li>[4]<a href="https://www.sony.com/electronics/support/articles/CCCT03000">[Catalyst Browse, Catalyst Prepare&#x2F;Plugin, Catalyst Edit] Download&#x2F;paid plans | Sony USA</a></li><li>[5]<a href="https://www.bilibili.com/video/BV19P411C7zL/">zve10画质测试，4k是超采样吗？</a></li><li>[5]<a href="https://www.bilibili.com/video/BV1pL4y1b7uP/">索尼旧菜单机型获得a7m4 全新创意外观滤镜色彩</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前买过两个松下的卡片机，卡片机非常轻便，出行带上拍拍真不错，但毕竟只是小英寸的底，画质已经跟手机拉不开差距，修图也没啥空间了，所以想换个单反或微单。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="摄影" scheme="https://zguishen.com/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>Redis 消息队列在 SpringBoot 中的使用</title>
    <link href="https://zguishen.com/posts/6fa181da.html"/>
    <id>https://zguishen.com/posts/6fa181da.html</id>
    <published>2024-04-26T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 除了做数据缓存，做 NoSQL 数据库，也可以当做轻量级消息队列使用，并且提供了基于 List 实现的、基于 Pub&#x2F;Sub 机制的订阅&#x2F;发布模式、基于 sorted set 的实现和基于 Stream 类型的实现几种实现方式。其中 List 实现的分非阻塞和阻塞方式，Stream 则是 Redis 5 加入的消息队列。</p><span id="more"></span><p>之前代码已经写过了，只是工程整合搞得比较复杂，所以这里算是写份注释文档。</p><p>关联代码地址<a href="https://github.com/zgshen/lin/tree/master/lin-redis">lin&#x2F;lin-redis at master · zgshen&#x2F;lin</a>。</p><h3 id="使用-List-类型实现"><a href="#使用-List-类型实现" class="headerlink" title="使用 List 类型实现"></a>使用 List 类型实现</h3><p>List 就是列表数据结构，用来做消息队列这是最简单直观的了，也是典型的点对点消息模型，先看下 Redis 列表提供的操作命令。</p><p>push 压入：</p><ul><li>LPUSH key value1 [value2 ...] 将一个或多个值插入到列表头部</li><li>RPUSH key value1 [value2 ...] 将一个或多个值插入到列表尾部</li></ul><p>pop 弹出：</p><ul><li>LPOP key 移除并获取列表的第一个元素</li><li>RPOP key 移除并获取列表的最后一个元素</li></ul><p>阻塞弹出；：</p><ul><li>BLPOP key1 [key2 ...] timeout 移除并获取列表的第一个元素，若列表为空则阻塞等待</li><li>BRPOP key1 [key2 ...] timeout 移除并获取列表的最后一个元素，若列表为空则阻塞等待</li></ul><p>压入和弹出前面的 L 和 R 表示从队列左端和右端压入和弹出，阻塞弹出的 B 代表就是 blocking 的意思。</p><p>使用队列一般遵循先进先出，所以要么左近右出，要么右近左出，框架提供的 RedisTemplate 封装了 Redis 的操作命令，push 和 pop 直接调用就行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">//左进</span></span><br><span class="line"><span class="keyword">public</span> Long <span class="title function_">push</span><span class="params">(String... params)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">aLong</span> <span class="operator">=</span> redisTemplate.opsForList().leftPushAll(LIST_PUSH_POP_MSG, params);</span><br><span class="line">    <span class="keyword">return</span> aLong;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右出，轮询检测</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> redisTemplate.opsForList().rightPop(LIST_PUSH_POP_MSG).toString();</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看下堵塞弹出的异步操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">blockingConsume</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Object&gt; obj = redisTemplate.executePipelined(<span class="keyword">new</span> <span class="title class_">RedisCallback</span>&lt;Object&gt;() &#123;</span><br><span class="line">        <span class="comment">//   @Nullable</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException &#123;</span><br><span class="line">            <span class="comment">//队列没有元素会阻塞操作，直到队列获取新的元素或超时</span></span><br><span class="line">            <span class="comment">//return connection.bRPop(PUB_SUB_TIME_OUT, LIST_PUSH_POP_MSG.getBytes());</span></span><br><span class="line">            <span class="keyword">return</span> connection.bLPop(PUB_SUB_TIME_OUT, LIST_PUSH_POP_MSG.getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">    <span class="keyword">for</span> (Object str : obj) &#123;</span><br><span class="line">        log.info(<span class="string">&quot;blockingConsume : &#123;&#125;&quot;</span>, str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外 Redis 还有两个命令 RPOPLPUSH、BRPOPLPUSH（阻塞）可以从一队列获取队列并且写入另一个队列，可以用于简单保证消息可靠性，业务成功处理后再移除另一队列的消息，如果业务处理失败又可以从另一队列恢复。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">rightPopLeftPush</span><span class="params">()</span> &#123;</span><br><span class="line">    String str;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        str = redisTemplate.opsForList().rightPopAndLeftPush(LIST_PUSH_POP_MSG, LIST_PUSH_POP_BACKUP_MSG).toString();</span><br><span class="line">        <span class="comment">// 其他业务，处理失败了还能在 LIST_PUSH_POP_BACKUP_MSG 队列找到备份</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;业务异常：&#123;&#125;&quot;</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 先进先出业务完毕出栈，让异常的消息留在队列里</span></span><br><span class="line">    redisTemplate.opsForList().leftPop(LIST_PUSH_POP_BACKUP_MSG);</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-Sorted-Set-实现"><a href="#使用-Sorted-Set-实现" class="headerlink" title="使用 Sorted Set 实现"></a>使用 Sorted Set 实现</h3><p>Sorted Set 是有序集合，元素唯一不可重复，元素按照 score 值升序排列，支持范围操作，所以适合做简单的延迟消息队列。</p><p>添加元素：</p><ul><li>ZADD key score member [score member ...] 向有序集合中加入一个或多个成员,或更新已存在成员的分数</li></ul><p>获取元素：</p><ul><li>ZRANGE key start stop [WITHSCORES] 按位置范围遍历集合,可附加分数</li><li>ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT...] 按分数范围遍历集合</li></ul><p>以下是简单的生产和消费程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> businessId 业务 id（如订单 id 等）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> expiredTime 延时时间，单位秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">produce</span><span class="params">(String businessId, <span class="type">long</span> expiredTime)</span> &#123;</span><br><span class="line">    redisTemplate.opsForZSet().add(MsgConstant.SORTED_SET_MSG, businessId, System.currentTimeMillis() + expiredTime * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单的消费程序</span></span><br><span class="line"><span class="comment"> * 死循环，仅做测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">consume</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">//(K key, double min, double max, long offset, long count)</span></span><br><span class="line">        <span class="comment">//键，要取区间score最小值，要取区间score最大值，偏移（从哪个位置开始），数量</span></span><br><span class="line">        Set&lt;String&gt; set = redisTemplate.opsForZSet().rangeByScore(MsgConstant.SORTED_SET_MSG, <span class="number">0</span>, System.currentTimeMillis(), <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (set == <span class="literal">null</span> || set.isEmpty()) <span class="keyword">continue</span>;</span><br><span class="line">        log.info(set.toString());</span><br><span class="line">        <span class="type">String</span> <span class="variable">next</span> <span class="operator">=</span> set.iterator().next();</span><br><span class="line">        <span class="type">Long</span> <span class="variable">remove</span> <span class="operator">=</span> redisTemplate.opsForZSet().remove(MsgConstant.SORTED_SET_MSG, next);</span><br><span class="line">        <span class="keyword">if</span> (remove &gt; <span class="number">0</span>) log.info(<span class="string">&quot;&#123;&#125; remove success.&quot;</span>, next);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-Pub-x2F-Sub-订阅发布模式"><a href="#使用-Pub-x2F-Sub-订阅发布模式" class="headerlink" title="使用 Pub&#x2F;Sub 订阅发布模式"></a>使用 Pub&#x2F;Sub 订阅发布模式</h3><p>发布者把消息发到某个频道，订阅改频道的所有消费者都会收到消息，即消息多播，并且订阅支持模糊匹配频道。这种方式就是常规的消费者-消费者模型，不过与典型的 MQ 还是有区别，Pub&#x2F;Sub 订阅发布更像是个广播，不能并发消费，不支持持久化，也没有 ACK 确认。</p><p>发布命令：</p><ul><li>PUBLISH channel message : 将消息 message 发布到指定的频道 channel</li></ul><p>订阅命令：</p><ul><li>SUBSCRIBE channel [channel ...] : 订阅一个或多个频道</li><li>PSUBSCRIBE pattern [pattern ...] : 订阅一个或多个模式,用于模糊匹配频道</li></ul><p>Spring 工程的配置类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisMessageListenerContainer <span class="title function_">container</span><span class="params">(RedisConnectionFactory connectionFactory,</span></span><br><span class="line"><span class="params">                                                MessageListenerAdapter adapter, MessageListenerAdapter adapter1)</span> &#123;</span><br><span class="line">    <span class="type">RedisMessageListenerContainer</span> <span class="variable">container</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisMessageListenerContainer</span>();</span><br><span class="line">    container.setConnectionFactory(connectionFactory);</span><br><span class="line">    <span class="comment">//主题的监听，adapter 和 adapter1 对应下面两个 bean 实例，有多少</span></span><br><span class="line">    container.addMessageListener(adapter, <span class="keyword">new</span> <span class="title class_">PatternTopic</span>(PUB_SUB_MSG));<span class="comment">//普通的订阅者</span></span><br><span class="line">    container.addMessageListener(adapter1, <span class="keyword">new</span> <span class="title class_">PatternTopic</span>(PUB_SUB_MSG_FUZZY));<span class="comment">//模糊匹配的订阅者</span></span><br><span class="line">    <span class="keyword">return</span> container;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多个订阅</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MessageListenerAdapter <span class="title function_">adapter</span><span class="params">(MessageSubscribe message)</span>&#123;</span><br><span class="line">    <span class="comment">// MessageSubscribe 的 onMessage 监听获取订阅数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MessageListenerAdapter</span>(message, <span class="string">&quot;onMessage&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MessageListenerAdapter <span class="title function_">adapter1</span><span class="params">(MessageSubscribe1 message)</span>&#123;</span><br><span class="line">    <span class="comment">// MessageSubscribe1 的 onMessage</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MessageListenerAdapter</span>(message, <span class="string">&quot;onMessage&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅者类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageSubscribe</span> <span class="keyword">implements</span> <span class="title class_">MessageListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(Message message, <span class="type">byte</span>[] bytes)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;sub, topic name: &#123;&#125;, message: &#123;&#125;&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>(bytes), <span class="keyword">new</span> <span class="title class_">String</span>(message.getBody()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发布者类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessagePublish</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">publish</span><span class="params">(String channel, String msg)</span> &#123;</span><br><span class="line">        redisTemplate.convertAndSend(channel, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-Stream"><a href="#使用-Stream" class="headerlink" title="使用 Stream"></a>使用 Stream</h3><p>Redis 5.0 新增了 Stream 的数据结构，与 Pub&#x2F;Sub 订阅发布模式相比，Redis Stream 提供了消息的持久化和主备复制功能。</p><p>添加消息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XADD key ID field value [field value ...] </span><br></pre></td></tr></table></figure><p>其中ID，消息id，可使用 * 表示由 redis 生成，可以自定义，但是要自己保证递增性</p><p>读取消息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XREAD [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]</span><br></pre></td></tr></table></figure><p>milliseconds 设置堵塞秒数，没设置就是非阻塞模式。</p><p>创建消费者组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XGROUP [CREATE key groupname id-or-$] [SETID key groupname id-or-$] [DESTROY key groupname] [DELCONSUMER key groupname consumername]</span><br></pre></td></tr></table></figure><p>key 队列名，不存在就创建；groupname 组名；$ 表示从尾部开始消费，只接受新消息，当前 Stream 消息会全部忽略。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 从头开始消费</span><br><span class="line">XGROUP CREATE mystream consumer-group-name 0-0  </span><br><span class="line"></span><br><span class="line"># 从尾部开始消费</span><br><span class="line">XGROUP CREATE mystream consumer-group-name $</span><br></pre></td></tr></table></figure><p>读取消费者组中的消息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XREADGROUP GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]</span><br></pre></td></tr></table></figure><p>group 消费组名；consumer 消费者名；count 读取数量；milliseconds 阻塞毫秒数；key 队列名；ID 消息 ID。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XREADGROUP GROUP consumer-group-name consumer-name COUNT 1 STREAMS mystream &gt;</span><br></pre></td></tr></table></figure><p>看下在 Spring Boot 中的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动初始化配置，注册 listener</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisStreamRunner</span> <span class="keyword">implements</span> <span class="title class_">ApplicationRunner</span>, DisposableBean &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StreamMessageListenerContainer&lt;String, MapRecord&lt;String, String, String&gt;&gt; container;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ThreadPoolTaskExecutor executor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedisConnectionFactory redisConnectionFactory;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RedisStreamRunner</span><span class="params">(ThreadPoolTaskExecutor executor, RedisConnectionFactory redisConnectionFactory, StringRedisTemplate stringRedisTemplate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.executor = executor;</span><br><span class="line">        <span class="built_in">this</span>.redisConnectionFactory = redisConnectionFactory;</span><br><span class="line">        <span class="built_in">this</span>.stringRedisTemplate = stringRedisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        StreamMessageListenerContainer.StreamMessageListenerContainerOptions&lt;String, MapRecord&lt;String, String, String&gt;&gt; options =</span><br><span class="line">                StreamMessageListenerContainer.StreamMessageListenerContainerOptions.builder()</span><br><span class="line">                        .batchSize(<span class="number">10</span>)<span class="comment">// 一次性最多拉取多少条消息</span></span><br><span class="line">                        .executor(executor)<span class="comment">// 执行消息轮询的执行器</span></span><br><span class="line">                        .pollTimeout(Duration.ZERO)<span class="comment">// 超时时间，设置为0，表示不超时（超时后会抛出异常）</span></span><br><span class="line">                        .build();</span><br><span class="line"></span><br><span class="line">        StreamMessageListenerContainer&lt;String, MapRecord&lt;String, String, String&gt;&gt; container =</span><br><span class="line">                StreamMessageListenerContainer.create(redisConnectionFactory, options);</span><br><span class="line"></span><br><span class="line">        initStreamAndGroup(stringRedisTemplate.opsForStream(), STREAM_KEY, STREAM_GROUP);</span><br><span class="line">        <span class="comment">// receive 方法内部 autoAcknowledge 为 false，需要手动 ack 的</span></span><br><span class="line">        container.receive(Consumer.from(STREAM_GROUP, STREAM_CONSUMER), <span class="comment">//消费组和消费者，这里只演示一个消费者</span></span><br><span class="line">                StreamOffset.create(STREAM_KEY, ReadOffset.lastConsumed()),<span class="comment">//读取 id 大于消费者组最后消费的所有新到达元素</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">TestStreamListener</span>(stringRedisTemplate));<span class="comment">//消费消息，业务处理</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.container = container;</span><br><span class="line">        <span class="built_in">this</span>.container.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消费组，不存在则创建</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initStreamAndGroup</span><span class="params">(StreamOperations&lt;String, ?, ?&gt; ops, String streamKey, String group)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            StreamInfo.<span class="type">XInfoGroups</span> <span class="variable">groups</span> <span class="operator">=</span> ops.groups(streamKey);</span><br><span class="line">            <span class="keyword">if</span> (groups.stream().noneMatch(xInfoGroup -&gt; group.equals(xInfoGroup.groupName()))) &#123;</span><br><span class="line">                status = ops.createGroup(streamKey, group);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">            <span class="type">RecordId</span> <span class="variable">initialRecord</span> <span class="operator">=</span> ops.add(ObjectRecord.create(streamKey, <span class="string">&quot;Initial Record&quot;</span>));</span><br><span class="line">            Assert.notNull(initialRecord, <span class="string">&quot;Cannot initialize stream with key &#x27;&quot;</span> + streamKey + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">            status = ops.createGroup(streamKey, ReadOffset.from(initialRecord), group);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            Assert.isTrue(<span class="string">&quot;OK&quot;</span>.equals(status), <span class="string">&quot;Cannot create group with name &#x27;&quot;</span> + group + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.container.stop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestStreamListener 处理消息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStreamListener</span> <span class="keyword">implements</span> <span class="title class_">StreamListener</span>&lt;String, MapRecord&lt;String, String, String&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestStreamListener</span><span class="params">(StringRedisTemplate redisTemplate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(MapRecord&lt;String, String, String&gt; message)</span> &#123;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;MessageId: &quot;</span> + message.getId());</span><br><span class="line">        log.info(<span class="string">&quot;Stream: &quot;</span> + message.getStream());</span><br><span class="line">        log.info(<span class="string">&quot;Body: &quot;</span> + message.getValue());</span><br><span class="line">        <span class="comment">//记得手动确认</span></span><br><span class="line">        redisTemplate.opsForStream().acknowledge(STREAM_GROUP, message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生产者：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStreamProducer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送流信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String streamKey, String msg)</span> &#123;</span><br><span class="line">        redisTemplate.opsForStream().add(Record.of(msg).withStreamKey(streamKey));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>[1]<a href="https://claude.ai/">Claude AI</a></li><li>[2]<a href="https://juejin.cn/post/6917511713315586061">Redis 消息队列的三种方案（List、Streams、Pub&#x2F;Sub）</a></li><li>[3]<a href="https://www.runoob.com/redis/redis-stream.html">Redis Stream | 菜鸟教程</a></li><li>[4]<a href="https://zwy.中国/archives/springboot-shi-yong-redis-stream-shi-xian-jian-ting-zhe">Spring boot使用redis-stream实现监听者</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Redis 除了做数据缓存，做 NoSQL 数据库，也可以当做轻量级消息队列使用，并且提供了基于 List 实现的、基于 Pub&amp;#x2F;Sub 机制的订阅&amp;#x2F;发布模式、基于 sorted set 的实现和基于 Stream 类型的实现几种实现方式。其中 List 实现的分非阻塞和阻塞方式，Stream 则是 Redis 5 加入的消息队列。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://zguishen.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Redis" scheme="https://zguishen.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>你想活出怎样的人生 君たちはどう生きるか</title>
    <link href="https://zguishen.com/posts/4ccc3ea3.html"/>
    <id>https://zguishen.com/posts/4ccc3ea3.html</id>
    <published>2024-04-10T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://movie.douban.com/subject/26925611/">《你想活出怎样的人生》</a>片名英译 <em>The Boy and the Heron</em>，男孩与苍鹭。电影故事挺简单清晰的，但是片中很多隐喻大概得看几遍才看明白，这第一遍看完最深的印象居然是多邻国的多儿（片中有很多绿色鹦鹉，太像多儿了）。</p><span id="more"></span><p><img src="https://i.zguishen.com/2024/04/e5d75dc7771d055b93d47c750732d49f.jpg"></p><p>这应该是宫崎骏最后的作品的，这部片看起来更像是宫崎骏在讲自己的故事，片中可以看到他以往的很多作品的影子，比如说跟《千与千寻》很像的神隐世界的海、汤屋、哇啦哇啦和纸人，《幽灵公主》的树精灵，《红猪》的亭子等等，同时明显感觉到宫崎骏想把很多题材一并讲完，有很多话想说，但是一部影片就这么长很难顾全。</p><p>故事背景时间在二战，战时民生凋敝物资紧缺，百姓流离失所，主角（真人）母亲死于空袭火灾，父亲是军工工厂老板，战争使得生意更好了，父亲再婚老婆是小姨子...</p><p>接下来是讲家庭，主角和继母关系并不怎么好，继母还是妈妈的妹妹。主角在学校打架被欺负为了不去学校故意砸伤自己的头在家养伤，在家看到母亲的遗物，一本书《你想活出怎样的人生》，对应片名。</p><p>然后就是进入高塔探索，神隐世界的实物有太多的隐喻说实话看不明白，比如说苍鹭、哇啦哇啦、鹈鹕、鹦鹉、消失在塔中的舅公、儿童时期的母亲等等。其中被困的鹈鹕吃不到鱼只能吃哇啦哇啦，而哇啦哇啦又是将要投胎的人的灵魂，洗手间旁将死的鹈鹕解释是没办法为了活下去才吃哇啦哇啦，这里是在影射日本战时的困境？或者是民众被拖入战火的困状，食物匮乏到以至于吃人（哇啦哇啦），与电影开头的人民生活镜头呼应？火美用烟火驱赶鹈鹕代表日本被轰炸；再者鹦鹉也是类似，鹦鹉甚至组建了国家，还有个很疯狂的大王。祖父用白色石头搭建稳定的积木才稳定神隐世界这是象征世界的稳定如同积木一般摇摇欲坠？疯狂的鹦鹉大王一到把积木劈掉导致神隐世界的崩溃，这里是在象征疯狂的军国主义？</p><p>我更偏向这是一场梦作为解释，通过与逝去的亲人的沟通化解矛盾，认识现实世界，让主角有勇气回到满目疮痍的现实。</p><p>综合看下来，这是宫崎骏一部回顾之作、总结之作。</p><p>每次写影评都乱糟糟的，特别这种意识流的不多看一两遍很多细节没法看到，有时闲累了干脆看别人的解析去了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://movie.douban.com/subject/26925611/&quot;&gt;《你想活出怎样的人生》&lt;/a&gt;片名英译 &lt;em&gt;The Boy and the Heron&lt;/em&gt;，男孩与苍鹭。电影故事挺简单清晰的，但是片中很多隐喻大概得看几遍才看明白，这第一遍看完最深的印象居然是多邻国的多儿（片中有很多绿色鹦鹉，太像多儿了）。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="影视" scheme="https://zguishen.com/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>城中村生活指南</title>
    <link href="https://zguishen.com/posts/637f219c.html"/>
    <id>https://zguishen.com/posts/637f219c.html</id>
    <published>2024-03-26T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<p>维基百科解释，城中村是指留存在城市区域内的传统乡村，是中国大陆地区城市化进程中出现的一种特有的现象。一般网络上提到最多的城中村是在广州和深圳的城中村，尤其是广州，一直都被吐槽城市面貌不像一线的城市，一边是珠江新城CBD，一边又是石牌村和员村，对比强烈。</p><span id="more"></span><p>自从毕业之后很长一段时间都是住在城中村，最近想搬家了，虽然关于城中村的研究报道已经有很多了，不过我还是想写一写我对城中村的印象和在村里的生活状况，以及一些租房情况。</p><p><img src="https://i.zguishen.com/2024/04/2e9d54f20d5917ad11e423722155aa2e.JPG"></p><h3 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h3><p>城中村房子建得非常密集，除了一些街边楼，大多数房子都得走小巷子，俗称握手楼，楼距非常小，所以低楼层的光照非常差，有些地方如果不是在大中午，基本上就是暗无天日。所以选择房子的时候就尽量不要选太深入小巷子，并且尽量不要低楼层，小巷子低楼层基本上就是又脏又阴暗，特别是回南天或者下雨的时候更是恶心，楼房居民上上下下，低层楼道非常脏，全是泥水。尤其注意房子有没有发霉，发霉的房子住了会生病的！宁愿多爬几层楼都不要选低层，如果怕高层晒到太阳夏天太热有空调解决，反正南方夏天这温度在哪都得开空调，但是光线不好的房子住久了人真的会抑郁的。</p><p>此外，临街的房子虽然出入方便，光线好，但是会很吵，城中村人口密集，大街两边楼下基本全是商铺，人流巨多，再加上广东有宵夜习惯，有些肠粉店甚至是24小时供应的，可能会被吵到晚上睡不着觉，早上也别想睡懒觉，此外也要注意餐饮的油烟，特别是楼下是烧烤那还是别租了。</p><p>总结就是不要太临街，尽量选高层光照条件较好的。</p><p>最后要考虑的就是离上班距离远不远，交通是否方便，附近是否有公交地铁，周边商超是否多，吃的在广州倒是没啥好担心，村里最不缺的就是吃的，24小时都有得吃。</p><h3 id="房东"><a href="#房东" class="headerlink" title="房东"></a>房东</h3><p>租房首选本地房东直租，事比较少，也不会过二房东多收费。在广州这边可以直接去线下找，一般小区门口或者是城中村都有告示牌贴满各种租房广告，村口也会有很多房东挂着牌子等着租户来看房。辨别是不是本地房东有一些方法，比如本地房东联系方式名字很喜欢写X生、X姐，或者学几句粤语跟房东沟通，就算不说粤语广谱口音也挺好认的，上了年纪的房东口音更明显，当然最直接的方式是看房本，不过看个房还没必要这样。</p><h3 id="水电和管理费"><a href="#水电和管理费" class="headerlink" title="水电和管理费"></a>水电和管理费</h3><p>城中村的水电价格一般都是水每吨5元，电每度1.5元。之前广州深圳市政府都出了规定水电燃气乱加价将被罚，然而根本没什么卵用，看看房东们是玩的：</p><blockquote><p>各位住户您好，贯彻执行供电标准，规范辖区群体综合用电，自7月1日起，结合实际收费管理进行调整！<br>1：基础电价由原来1.5元&#x2F;度降为0.67元&#x2F;度，水费由原来的5元&#x2F;吨降为2.93&#x2F;吨。<br>2、享受居民水电价后，相对于收取（电损，公摊照明，电力设施维护，2次加压和维护损耗等费用）等硬件基础服务费0.83元&#x2F;度，2.07元&#x2F;吨。</p></blockquote><p>正所谓上有上策，下有对策，改交的钱一分都不会少。除了水电之外，一般还要交管理费卫生费等等，还有门禁现在基本都是居委统一登记发放，每月还得给门禁充钱...</p><p>所以有时候每月你算下来的话要交的钱也不少的，特别是窝在家比较久用电比较多的租户，花多点钱去小区合租住反而更划算，小区民用水电用个爽，而且环境可好太多了。村里更适合早出晚归的打工人，只当做一个洗澡睡觉的地方，或者是喜欢独居的人。</p><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>广深城中村很多地方的网络都是被垄断的，连官方运营商都没辙的，比如你装电信网打1000官方会直接告诉你装不了，或者是装了之后被人剪了，你是一点办法都没有，简直就是无法无天。有些房东会和本地的网络承包商勾结，让你只能用又贵又慢的宽带</p><h3 id="电器"><a href="#电器" class="headerlink" title="电器"></a>电器</h3><p>配套电器要看齐不齐全，空调、冰箱和热水器是必须的，空调要看是几级能耗，能耗高的夏天电费吓人，有些黑心房东会故意装高能耗空调让你多用电赚差价，城中村除非公寓电价全收是1.5元每度，实际房东叫电费没这么贵所以能收差价。</p><h3 id="水压"><a href="#水压" class="headerlink" title="水压"></a>水压</h3><p>然后要看屋子里的水压是否正常，特别是住高层要开下水龙头看看水压，水压低的话洗个澡都不舒坦，洗衣机洗衣服甚至超时了水还没放够...我现在住的这房子就是这样，后来房东总算加了加压器水压才正常了。</p><h3 id="朝向"><a href="#朝向" class="headerlink" title="朝向"></a>朝向</h3><p>再者是注意布局朝向。城中村很多房子其实是违建的，所以房子隔出来会有些奇形怪状的房间，强迫症住起来可能很别扭。房间朝向的话尽量不要墙的一面被下午太阳直射，不然的话夏天晚上回家你会收获一间蒸笼和一面铁板烧铁板。当然，我上面也说了，反正夏天都要开空调，阳光更重要，优先要有阳光再考虑这个问题。</p><h3 id="维修"><a href="#维修" class="headerlink" title="维修"></a>维修</h3><p>一般情况下租房由房东提供的电器坏了都可以找房东维修，但是这个还有要问清楚，可能有的房东会让你自己出钱，当然是自己买的电器就是自己维修了。</p><p>其实修换水龙头换灯，修一些电器都挺简单的，拼多多买工具，网络上找下教程就可以自己动手了，现在人工越来越贵了，请下师傅50块100块就没了。</p><p>出租屋的用电安全跟常识一样没太多说的，只有热水器这东西要多注意，城中村的热水器几乎都是用电热水器，所以洗澡的时候请务必先关闭电源早洗澡，看过新闻应该知道有人因为漏电洗澡的时候触电而亡。</p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>村里人员混杂，如果邻居刚毕业的大学生倒是没啥问题，只是各种社会人就难说了，当然现在社会还是比以前安全得多了，一半情况下是没啥问题。要说比较烦的问题，噪音是一个，握手楼不隔音，有人在吵架家庭纠纷之类真的吵，甚至晚上男女的声音都能听到...碰到这种情况只能搬家了。</p><p>还有一个比较难以评论的问题是站街女，村里的一些小巷子有不少聚集站街的。根据个人观察，以前是很多的，疫情之后见过民警有时候会到巷子里巡逻，见得比较少了。只能说大家还是洁身自好吧，一般有站街的地方都是比较深入的小巷子，临街太过光明正大不容易看到，不走小巷子就见不到的。</p><p>门口最好加上监控</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>城中村是很多打工人到城里打工的第一站，给低收入群体提供了一个庇护之所，让你能在城里快速站稳脚跟，当工作稳定下来工资上涨之后很多人就开始搬家离开，然后新来的外来打工人不断来补充这个市场。当然，也有人月薪过万了照样还住在城中村，这个单纯就是个人的选择，城中村能以较低价格牺牲一些环境方面的问题，租到比小区更宽敞的房子，不用跟别人合租，也是一种优势。</p><p>每当我做BRT经过黄村、车陂、棠东、棠下、上社和石牌村，沿中轴线走到花城广场下看广州塔的时候，才感受到这座城市的反差如此巨大，就像现在中国社会的割裂程度之大，有人出生就在罗马，有人背井离乡漂泊打工，人与人的贫富差距越来越大，相互之间越来越难以互相理解。</p><p>随手写的，头晕晕的写得有点乱，等后面有空再修改一下。</p><blockquote><p>2024&#x2F;08&#x2F;08修改</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;维基百科解释，城中村是指留存在城市区域内的传统乡村，是中国大陆地区城市化进程中出现的一种特有的现象。一般网络上提到最多的城中村是在广州和深圳的城中村，尤其是广州，一直都被吐槽城市面貌不像一线的城市，一边是珠江新城CBD，一边又是石牌村和员村，对比强烈。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="城市" scheme="https://zguishen.com/tags/%E5%9F%8E%E5%B8%82/"/>
    
  </entry>
  
  <entry>
    <title>昆明</title>
    <link href="https://zguishen.com/posts/466cde2d.html"/>
    <id>https://zguishen.com/posts/466cde2d.html</id>
    <published>2024-03-11T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.zguishen.com/2024/03/1197b164ed1c558555020b8a5e37af26.jpg" alt="滇池海鸥"></p><p>在广东湿冷的天气里实在受不了，看了全国的天气预报，只有西南和海南还是好天气，所以我决定到昆明走一走。</p><span id="more"></span><p>其实一开始是非常想去泰国走一走的，因为从来还没有出过国，事实上去昆明也是自己第一次一个人出省回广州也是第一次做飞机。虽然泰国免签了，但是出国还是相对比较麻烦而且不告诉家里感觉非常不好，所以还是决定去昆明，毕竟在国内就没什么顾虑了。</p><iframe src="https://www.google.com/maps/d/u/0/embed?mid=1tYvl8OIk7HrR9zEBaoe9J9Uahy_mBv4&ehbc=2E312F" width="640" height="480"></iframe><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h3><p>一到昆明最大的感触就是，生活节奏是慢悠悠的，司机是会让行人的，电动车的出行体验能这么好（如何你来过电鸡之城广州对比就嫩感受到了）。</p><p>因为是临时决定要来的，机票看起来很贵，所以是做的高铁晚上到昆明，晚上先到昆明老街逛逛，就是全国大同小异的商业街，这边普遍关门都会早一点，啥都吃不上，没得选只好随便吃了螺蛳粉。以前是觉得又辣又臭不吃螺蛳粉，实际吃起来还行啦，辣点也不怕，好像只要离开广东吃辣都不会长痘了，上次在贵州也是吃了一堆辣一点事都没有，水土气候影响真神奇...</p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h3><p>第二天早上到翠湖，好像在昆明只要是个公园只要有水的地方都有海鸥，翠湖这里还有松鼠，真的可爱。</p><p><img src="https://i.zguishen.com/2024/03/0a2a51895c54f577354124ff512c89da.jpg" alt="翠湖/松鼠"></p><p>翠湖附近也是各种学校和历史建筑的聚集地，云南陆军讲武堂、云南大学、云南师范大学和西南联大博物馆等都在这里。中午在云南大学吃的饭，非常实惠，有一碗切片的咸猪肉，下面是青瓜，很好吃。</p><p><img src="https://i.zguishen.com/2024/03/a5abfc442da1c9be9bfb866d92309942.jpg" alt="云南大学食堂午餐"></p><p>吃完饭逛了下云南师范大学，然后下午西山风景区，又是爬山哈哈，下次出门不想爬山了。不过西山上风景还是不错的，能俯看到昆明市区和滇池，</p><p><img src="https://i.zguishen.com/2024/03/b73e6f8f381f75327804228753ba634d.jpg" alt="俯瞰滇池"></p><p>做巴士和电瓶车到西山风景区，然后爬山到龙门石窟，因为在山上拍湖边公路，等车辆经过等了好久一直没车，结果下山过了5点错过做滇池索道到海埂大坝了，这景区运营下班真早，我5点多到滇池索道的时候卖票窗口早关了，景区服务员在疯狂干饭，真的，疯狂扒拉😂。</p><p><img src="https://i.zguishen.com/2024/03/b4fd42f730e1c6cf5e0e311d3dde53b6.jpg" alt="龙门石窟"></p><p>晚上去吃了过桥米线，过桥米线可以不辣的，感觉云南很多食物都可以是不辣的，这对吃不了辣的人群真是太友好了。</p><p><img src="https://i.zguishen.com/2024/03/a46150ac6d23794ed5658a600dfbd536.jpg" alt="过桥米线"></p><h3 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h3><p>第三天早上到云南省博物馆，云南省博的外观设计跟广东省博差不多，都是方方正正那种，展馆有三楼，按时间线从生命起源讲到云南现代，就...非常直接，此外在一楼还有个香格里拉主题展馆。展品算不上丰富但是看起来还是比广东省博强些。</p><p>下午本来想去捞鱼河湿地公园的，但是比较远感觉实在是累，所以去了海埂大坝，沿着滇池岸边从海埂大坝骑共享电动车到海洪湿地公园，不过这边就没法看到好看的日落的...</p><p><img src="https://i.zguishen.com/2024/03/e0ef9941686256609d91dc8f59cfc962.jpg" alt="海洪湿地公园"></p><p>晚上去吃了菌子火锅，小红书推荐的，感觉踩雷了，菌子想和鸡肉都不够新鲜，一个人一百来块不便宜了啊，到目前为止还没有吃过比家里这边潮汕牛肉火锅更好吃的火锅。</p><p><img src="https://i.zguishen.com/2024/03/1f93a9e1e4c29cba4ad8b982fecc0312.jpg" alt="菌子火锅"></p><h3 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h3><p>第四天早上到篆新农贸市场，买了草莓和蓝莓，听说这市场挺坑外地人的，但是还是买了，就算被坑了还是比广州便宜的。草莓带回广州样子就没法看了不新鲜了，保存运输真是麻烦，怪不得这么贵。蓝莓就好多了基本没问题，放冰箱这几天天天吃很好吃，强烈推荐回家的时候买蓝莓，真的太划算了，草莓就在当地吃完吧别带回家了。</p><p>下午到长水机场坐飞机回广州，这是这辈子第一次坐飞机，虽然老家就在机场附近，在广州去白云机场也没多远，但是真没坐过。其实过年我完全可以做飞机回家的，只是觉得不够远没必要，去省外其他地方也去得少，碰到要到省外出差就跟领导拒绝了哈哈，没想到这么多年一直没机会做次飞机。这次做飞机还专门做靠窗位置，可惜到广州下雨了，不管是广州塔还是大蟑螂啥都看不到。</p><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><p>昆明被称为春城，一年之中大部分时候天气都非常好，只是天气干燥得厉害，太阳晒得厉害，滇池的风也大得厉害，如果来旅行的话口罩防晒霜保湿都需要。</p><p>昆明节奏比较慢，司机居然是会让人的，非机动车道很宽，共享电动车骑行体验非常棒，走在在人行道上也不用担心被电鸡创。</p><p>再见昆明，等下次来云南再到大理转转，到时候也许不怕冷了再到香格里拉看雪山。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.zguishen.com/2024/03/1197b164ed1c558555020b8a5e37af26.jpg&quot; alt=&quot;滇池海鸥&quot;&gt;&lt;/p&gt;
&lt;p&gt;在广东湿冷的天气里实在受不了，看了全国的天气预报，只有西南和海南还是好天气，所以我决定到昆明走一走。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Attack on Titan | 進撃の巨人</title>
    <link href="https://zguishen.com/posts/8ae8faa8.html"/>
    <id>https://zguishen.com/posts/8ae8faa8.html</id>
    <published>2023-11-04T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/2023/attack-on-titan.jpg"></p><p>忘记是什么时候开始追<a href="https://movie.douban.com/subject/23748525/">《进击的巨人》</a>动画的了，只记得当时是看<a href="https://movie.douban.com/subject/3430169/">《钢之炼金术师》</a>时，经常看到有人将这两部作品相提并论，当然经常是评论区吵得不可开交啦。开始看进巨的时候以为又是一部热血王道番剧，不过当动画剧情的发展和看了部分漫画版后也知道作者的立意不是如此单纯。</p><span id="more"></span><p>《进击的巨人》2009漫画开始连载，2013年动画开播，2023年结束，出场人物众多，角色形象鲜明。比如主角团三人组主角艾伦、军师阿尔敏和类似保镖角色的三笠；调查兵团团长埃尔文、一米六的兵长利威尔；九大巨人每个都有不同的特点。十年的跨度很大，很多情节现在我也都记不清了，不过动画贡献的许多梗却一直为人们熟知，有初见巨人的“那一天，人类回想起了被它们所支配的恐惧...”，有战斗时的“塔塔开”和“献出心脏”，还有漫画结局艾伦的“那种事情不要啊”。</p><p>剧情的走向就是认识世界的过程。一开始讲述的是人类因为巨人被束缚在围城之中，壁外调查是为了挣脱束缚，追寻自由。当墙内人们突破封锁来到海边的时候，知道海的对岸还有另外的世界，这时候才知道这是国家间的战争。再随后在与马莱国的对抗中逐渐知道巨人的真相，这时候主角的追求也更加深入，想要结束两千多年艾尔迪亚和其他种族的战争。</p><p>漫画的结局被很多人诟病，虽然是架空世界的题材，但是也有一些现实社会的映射，有些人会认为是给日本军国主义的洗白，可能在作者的生活中还是很难避免日本社会的影响，但是动画版的结局看完之后还是更像 war never changes 的模板，当在末世的废土中少年和他的小狗走进始祖树中，会不会又是一个文明的轮回呢？</p><p>谏山创立了很大的意，但却给了一个现实的结局，不够爽，不够圆满。而且也有一些很难自圆其说的情节，比如说把始祖尤弥尔的动机解释为扭曲的爱情，然后就是没有交代怪诞虫是什么东西，只能理解为一个设定。</p><p>在我看来，进巨的核心有三点，一是反战，二是有人类就有纷争，三是不放弃对自由和平的追求。动画十年跨度太大了，很多剧情我都记不太清了，这篇短评写得挺混乱的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/2023/attack-on-titan.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;忘记是什么时候开始追&lt;a href=&quot;https://movie.douban.com/subject/23748525/&quot;&gt;《进击的巨人》&lt;/a&gt;动画的了，只记得当时是看&lt;a href=&quot;https://movie.douban.com/subject/3430169/&quot;&gt;《钢之炼金术师》&lt;/a&gt;时，经常看到有人将这两部作品相提并论，当然经常是评论区吵得不可开交啦。开始看进巨的时候以为又是一部热血王道番剧，不过当动画剧情的发展和看了部分漫画版后也知道作者的立意不是如此单纯。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="影视" scheme="https://zguishen.com/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>Java21 特性</title>
    <link href="https://zguishen.com/posts/9c6d1e66.html"/>
    <id>https://zguishen.com/posts/9c6d1e66.html</id>
    <published>2023-10-23T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<p>长期支持版的 Java21 在 9 月 19 日发布了，看一下有哪些新特性，主要看看正式加入的特性，预览特性就浏览一遍就行了，毕竟预览特性随时都会变化的。</p><h2 id="正式特性"><a href="#正式特性" class="headerlink" title="正式特性"></a>正式特性</h2><h3 id="Sequenced-Collections-有序集合"><a href="#Sequenced-Collections-有序集合" class="headerlink" title="Sequenced Collections | 有序集合"></a>Sequenced Collections | 有序集合</h3><p>Java 的集合框架缺少一种能够表示具有定义好的排列顺序的元素序列（比如 List 和 Deque 等）的集合类型，以及对这类集合的操作集。</p><p>来看看以前获取序列元素的操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getCollectionElementTest</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Integer&gt; list = List.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    list.get(<span class="number">0</span>);</span><br><span class="line">    list.get(list.size() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    Deque&lt;Integer&gt; deque = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(list);</span><br><span class="line">    deque.getFirst();</span><br><span class="line">    deque.getLast();</span><br><span class="line"></span><br><span class="line">    SortedSet&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">TreeSet</span>&lt;&gt;(list);</span><br><span class="line">    set.getFirst();</span><br><span class="line">    set.getLast();</span><br><span class="line"></span><br><span class="line">    LinkedHashSet&lt;Integer&gt; linkList = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;(list);</span><br><span class="line">    Iterator&lt;Integer&gt; iterator = linkList.iterator();</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要拿到序列的第一个元素和最后一个元素，列表使用下标直接获取，队列和有序集合有另外的实现方法，链表就只能遍历获取了，没有一个集合接口来归类这类有顺序的序列，具体的获取元素的操作方法也各不相同。</p><p>为了解决这些问题引入了 <code>SequencedCollection</code> 接口，此接口继承自 <code>Collection</code> 接口，具体可以看下图：<br><img src="https://cr.openjdk.org/~smarks/collections/SequencedCollectionDiagram20220216.png" alt="JEP 431: Sequenced Collections"></p><p><code>List</code> 和 <code>Deque</code> 接口实现了<code>SequencedCollection</code> 接口；<code>SortedMap</code> 和<code>LinkedHashMap</code> 实现了<code>SequencedMap</code> 接口。现在列表和链表都能使用统一的方式获取首尾元素了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getCollectionElementNewTest</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Integer&gt; list = List.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    list.getFirst();</span><br><span class="line">    list.getLast();</span><br><span class="line"></span><br><span class="line">    LinkedHashSet&lt;Integer&gt; linkList = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;(list);</span><br><span class="line">    linkList.getFirst();</span><br><span class="line">    linkList.getLast();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Virtual-Threads-虚拟线程"><a href="#Virtual-Threads-虚拟线程" class="headerlink" title="Virtual Threads 虚拟线程"></a>Virtual Threads 虚拟线程</h3><p>虚拟线程详细看还在预览的时候之前写过一篇文章<a href="https://zguishen.com/posts/8a666b01.html">《简单了解下 JDK19 预览版的 Virtual Threads》</a>，正式特性也没太大变化，之前写的测试用例都能正常跑通。</p><h3 id="Record-Patterns-记录模式"><a href="#Record-Patterns-记录模式" class="headerlink" title="Record Patterns | 记录模式"></a>Record Patterns | 记录模式</h3><p>Java16 开始新增了 record 类，新增的 Record Patterns 特性就是对 record 类的一些增强性操作，简化类型判断和类型转换流程，并且支持嵌套操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecordPatternsExample</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">patternTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        printSum(p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类型判断和转换，及获取值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printSum</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 跟普通类一样，传入对象再使用方法获取x和y的值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Point p) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> p.x();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> p.y();</span><br><span class="line">            System.out.println(x+y);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  简化操作</span></span><br><span class="line"><span class="comment">         *  定义传入对象声明参数类型，可在后续直接获取值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title function_">Point</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>) &#123;</span><br><span class="line">            System.out.println(x + y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">nestTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ColoredPoint</span> <span class="variable">cp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ColoredPoint</span>(<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>, <span class="number">2</span>), ColInheritingor.BLUE);</span><br><span class="line">        printPointY(cp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printPointY</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> ColoredPoint coloredPoint) &#123;</span><br><span class="line">            <span class="keyword">if</span> (coloredPoint.p() != <span class="literal">null</span>) &#123;</span><br><span class="line">                System.out.println(coloredPoint.p().y());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 可嵌套</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title function_">ColoredPoint</span><span class="params">(Point p, Color c)</span>) &#123;</span><br><span class="line">            System.out.println(p.y());</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">record</span> <span class="title class_">ColoredPoint</span><span class="params">(Point p, Color c)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123; RED, GREEN, BLUE&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">record</span> <span class="title class_">Point</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">//this.x = x;</span></span><br><span class="line">        <span class="built_in">this</span>(x, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Pattern-Matching-for-switch-switch-的模式匹配"><a href="#Pattern-Matching-for-switch-switch-的模式匹配" class="headerlink" title="Pattern Matching for switch | switch 的模式匹配"></a>Pattern Matching for switch | switch 的模式匹配</h3><p>这也是一个增强的特性，目的是扩展 switch 表达式的适用性。</p><p>看例子，先定义一些类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Person</span> permits Tom, Jack, Nathan &#123;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    Person(<span class="type">int</span> age) &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Tom</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Tom</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Jack</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Jack</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Nathan</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Nathan</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断用户是谁可以这么操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">whenTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tom</span>(<span class="number">30</span>);</span><br><span class="line">    <span class="keyword">switch</span> (person) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">null</span> -&gt; System.out.println(<span class="string">&quot;null!&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> Jack jack -&gt; System.out.println(<span class="string">&quot;I am jack&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> Tom tom</span><br><span class="line">                when tom.age == <span class="number">30</span> -&gt; System.out.println(<span class="string">&quot;Tom&#x27;s age is 30&quot;</span>);</span><br><span class="line">        <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;Who am i?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在以前我们需要用到 instanceof 来一个个判断 person 是谁，现在可以用 switch 的模式匹配来简化操作，甚至在 case 语句中还可以用 when 语句来对对象的属性做判断。</p><p>由于 Person 这里定义的是一个密闭类，即创建的对象只能是指定的几种类型，所以穷尽 case 之后的 default 可以省略。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">coverageTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Nathan</span>(<span class="number">29</span>);</span><br><span class="line">    <span class="keyword">switch</span> (person) &#123;</span><br><span class="line">        <span class="keyword">case</span> Tom tom -&gt; System.out.println(<span class="string">&quot;I am tom.&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> Jack jack -&gt; System.out.println(<span class="string">&quot;I am jack.&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> Nathan nathan -&gt; System.out.println(<span class="string">&quot;I am nathan.&quot;</span>);</span><br><span class="line">        <span class="comment">//default -&gt; ...</span></span><br><span class="line">        <span class="comment">//由于 Person 是一个密闭类，实现类只有固定的三个，</span></span><br><span class="line">        <span class="comment">//所以这里的三个 case 已经穷尽所有情况，可以不用加 default 分支。</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以和记录模式的搭配使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">recordTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">record</span> <span class="title class_">MyPair</span>&lt;S,T&gt;(S fst, T snd)&#123;&#125;;</span><br><span class="line">    MyPair&lt;String, Integer&gt; akari = <span class="keyword">new</span> <span class="title class_">MyPair</span>&lt;&gt;(<span class="string">&quot;Akari&quot;</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (akari) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="literal">null</span> -&gt; System.out.println(<span class="string">&quot;null!&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="title function_">MyPair</span><span class="params">(<span class="keyword">var</span> name, <span class="keyword">var</span> age)</span> -&gt; System.out.printf(<span class="string">&quot;username:%s, user age:%d&quot;</span>, name, age);</span><br><span class="line">        <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="预览特性"><a href="#预览特性" class="headerlink" title="预览特性"></a>预览特性</h2><h3 id="String-Templates-字符串模板"><a href="#String-Templates-字符串模板" class="headerlink" title="String Templates | 字符串模板"></a>String Templates | 字符串模板</h3><p>对字符串的操作是日常开发的高配功能，Java12 带来了处理字符串的新方式。</p><p>字符串模板处理器类 STR 用于将表达式中的变量进行字符串插值，最后返回字符串。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">STRTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;nathan&quot;</span>;</span><br><span class="line">    <span class="comment">// STR 模板处理器</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> STR.<span class="string">&quot;I am \&#123;name&#125;.&quot;</span>;</span><br><span class="line">    System.out.println(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以内嵌表达式</span></span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>, b=<span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    System.out.println(STR.<span class="string">&quot;\&#123;a&#125; + \&#123;b&#125; = \&#123;a+b&#125;&quot;</span>);</span><br><span class="line">    System.out.println(STR.<span class="string">&quot;Tody is \&#123;LocalDate.now()&#125;.&quot;</span>);</span><br><span class="line">    System.out.println(STR.<span class="string">&quot;\&#123;a++&#125;, \&#123;a++&#125;, \&#123;arr[0]&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Java15 已经可以定义多行文本块，字符串处理也能配合使用，看下面的多行模板表达式例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mutilLineTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">version</span> <span class="operator">=</span> <span class="number">21</span>;</span><br><span class="line">    <span class="type">var</span> <span class="variable">str</span> <span class="operator">=</span> STR.<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            &lt;html&gt;</span></span><br><span class="line"><span class="string">                &lt;body&gt;</span></span><br><span class="line"><span class="string">                    &lt;p&gt;Java \&#123;version&#125; is now available!&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;/body&gt;</span></span><br><span class="line"><span class="string">            &lt;/html&gt;</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span>;</span><br><span class="line">    System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了 STR 之外还有一个 FMT 模板处理器，它除了具备 STR 一样的插值功能外还能做左侧格式化处理。</p><p>对比以下 STR 和 FMT 的处理方式和输出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">FMTTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">record</span> <span class="title class_">Rectangle</span><span class="params">(String name, <span class="type">double</span> width, <span class="type">double</span> height)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> width * height;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Rectangle[] zone = <span class="keyword">new</span> <span class="title class_">Rectangle</span>[] &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="string">&quot;Alfa&quot;</span>, <span class="number">17.8</span>, <span class="number">31.4</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="string">&quot;Bravo&quot;</span>, <span class="number">9.6</span>, <span class="number">12.4</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="string">&quot;Charlie&quot;</span>, <span class="number">7.1</span>, <span class="number">11.23</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">strTable</span> <span class="operator">=</span> STR.<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Description  Width  Height  Area</span></span><br><span class="line"><span class="string">        \&#123;zone[0].name&#125;  \&#123;zone[0].width&#125;  \&#123;zone[0].height&#125;     \&#123;zone[0].area()&#125;</span></span><br><span class="line"><span class="string">        \&#123;zone[1].name&#125;  \&#123;zone[1].width&#125;  \&#123;zone[1].height&#125;     \&#123;zone[1].area()&#125;</span></span><br><span class="line"><span class="string">        \&#123;zone[2].name&#125;  \&#123;zone[2].width&#125;  \&#123;zone[2].height&#125;     \&#123;zone[2].area()&#125;</span></span><br><span class="line"><span class="string">        Total \&#123;zone[0].area() + zone[1].area() + zone[2].area()&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fmtTable</span> <span class="operator">=</span> FMT.<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Description     Width    Height     Area</span></span><br><span class="line"><span class="string">        %-12s\&#123;zone[0].name&#125;  %7.2f\&#123;zone[0].width&#125;  %7.2f\&#123;zone[0].height&#125;     %7.2f\&#123;zone[0].area()&#125;</span></span><br><span class="line"><span class="string">        %-12s\&#123;zone[1].name&#125;  %7.2f\&#123;zone[1].width&#125;  %7.2f\&#123;zone[1].height&#125;     %7.2f\&#123;zone[1].area()&#125;</span></span><br><span class="line"><span class="string">        %-12s\&#123;zone[2].name&#125;  %7.2f\&#123;zone[2].width&#125;  %7.2f\&#123;zone[2].height&#125;     %7.2f\&#123;zone[2].area()&#125;</span></span><br><span class="line"><span class="string">        \&#123;&quot; &quot;.repeat(28)&#125; Total %7.2f\&#123;zone[0].area() + zone[1].area() + zone[2].area()&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span>;</span><br><span class="line">    System.out.println(strTable);</span><br><span class="line">    System.out.println(fmtTable);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外还有一个 RAW 标准模板处理器，有待处理元数据可先用 RAW 写好模板，等拿到变量值再做插值。另外，为了保证安全，如果单纯写一个模板字符串会有检查错误。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">RAWTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Joan&quot;</span>;</span><br><span class="line">    <span class="comment">//String info = &quot;My name is \&#123;name&#125;.&quot;; //error</span></span><br><span class="line">    <span class="type">StringTemplate</span> <span class="variable">st</span> <span class="operator">=</span> RAW.<span class="string">&quot;My name is \&#123;name&#125;.&quot;</span>;</span><br><span class="line">    System.out.println(STR.process(st));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模板处理器 STR 和 FMT 是功能接口 StringTemplate.Processor 的实例，实现该接口的​​抽象方法 process，该方法接受 StringTemplate 并返回一个对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">interfaceTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>, y = <span class="number">20</span>;</span><br><span class="line">    <span class="type">StringTemplate</span> <span class="variable">st</span> <span class="operator">=</span> RAW.<span class="string">&quot;\&#123;x&#125; plus \&#123;y&#125; equals \&#123;x + y&#125;&quot;</span>;</span><br><span class="line">    System.out.println(st.fragments());</span><br><span class="line">    System.out.println(st.values());</span><br><span class="line">    <span class="comment">//StringTemplate&#123; fragments = [ &quot;&quot;, &quot; plus &quot;, &quot; equals &quot;, &quot;&quot; ], values = [10, 20, 30] &#125;</span></span><br><span class="line">    <span class="comment">//输出两部分，一部分是字符串的各段和各段之间的插值占位</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现接口，组装数据的方法，如果自己要加料就可以在这里处理</span></span><br><span class="line">    <span class="type">var</span> <span class="variable">INTER</span> <span class="operator">=</span> StringTemplate.Processor.of((StringTemplate _st) -&gt; &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        Iterator&lt;String&gt; fragIter = _st.fragments().iterator();</span><br><span class="line">        <span class="keyword">for</span> (Object value : _st.values()) &#123;</span><br><span class="line">            sb.append(fragIter.next());</span><br><span class="line">            sb.append(value);</span><br><span class="line">            sb.append(<span class="string">&quot;_&quot;</span>);<span class="comment">//加点东西看看</span></span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(fragIter.next());</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;);</span><br><span class="line">    System.out.println(INTER.<span class="string">&quot;\&#123;x&#125; plus \&#123;y&#125; equals \&#123;x + y&#125;&quot;</span>);</span><br><span class="line">    <span class="comment">//| 10 and 20 equals 30</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Unnamed-Patterns-and-Variables-未命名模式和变量"><a href="#Unnamed-Patterns-and-Variables-未命名模式和变量" class="headerlink" title="Unnamed Patterns and Variables | 未命名模式和变量"></a>Unnamed Patterns and Variables | 未命名模式和变量</h3><p>这个特性主要是用来简化代码的，如果在代码中声明了变量但又用不上，可以用下划线 <code>_</code> 代替，在记录模式和平常的循环和异常处理代码块中能用到，需要注意的是别跟用下划线开头做变量混淆了。</p><p>在记录模式中的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">record</span> <span class="title class_">Point</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123; &#125;</span><br><span class="line"><span class="keyword">record</span> <span class="title class_">User</span><span class="params">(Order order)</span> &#123;&#125;</span><br><span class="line"><span class="keyword">record</span> <span class="title class_">Order</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unnamedPatternTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Point</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    unnamedPattern(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unnamedPattern</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果用不上某些变量可以省略写为 _</span></span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title function_">Point</span><span class="params">(<span class="type">int</span> x, _)</span>) &#123;</span><br><span class="line">        System.out.printf(<span class="string">&quot;x value is:%d.&quot;</span>, x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// switch 也可以这么用</span></span><br><span class="line">    <span class="keyword">switch</span> (obj) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="title function_">User</span><span class="params">(_)</span> -&gt; System.out.printf(<span class="string">&quot;user object.&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="title function_">Point</span><span class="params">(_, _)</span> -&gt; System.out.println(<span class="string">&quot;point object.&quot;</span>);</span><br><span class="line">        <span class="keyword">default</span> -&gt; System.out.printf(<span class="string">&quot;default output.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在循环和异常处理代码块中的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unnamedVariablesTest</span><span class="params">()</span> &#123;</span><br><span class="line">    Queue&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(List.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Integer _ : list) &#123;</span><br><span class="line">        sum += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (list.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">_</span> <span class="operator">=</span> list.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">_</span> <span class="operator">=</span> sum;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">_</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception _) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Unanmed-class-and-instance-Main-method-未命名类和实例的-Main-方法"><a href="#Unanmed-class-and-instance-Main-method-未命名类和实例的-Main-方法" class="headerlink" title="Unanmed class and instance Main method 未命名类和实例的 | Main 方法"></a>Unanmed class and instance Main method 未命名类和实例的 | Main 方法</h3><p>未命名类和实例的 Main 方法由于还是预览特性，IDEA 也还没有支持，可以用命令行来测试。</p><p>新建一个 Main.java 文件，编辑内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Unanmed class and instance main method.&quot;</span>;</span><br></pre></td></tr></table></figure><p>使用命令编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ~/app/jdk/jdk-21/bin/javac --release 21 --enable-preview Main.java</span><br><span class="line">Note: Main.java uses preview features of Java SE 21.</span><br><span class="line">Note: Recompile with -Xlint:preview <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ~/app/jdk/jdk-21/bin/java --enable-preview Main                   </span><br><span class="line">Unanmed class and instance main method.</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>[1] <a href="https://openjdk.org/projects/jdk/21/">JDK 21</a></li><li>[2] <a href="https://www.unlogged.io/post/all-you-need-to-know-about-java21">All you need to know about Java21</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;长期支持版的 Java21 在 9 月 19 日发布了，看一下有哪些新特性，主要看看正式加入的特性，预览特性就浏览一遍就行了，毕竟预览特性随时都会变化的。&lt;/p&gt;
&lt;h2 id=&quot;正式特性&quot;&gt;&lt;a href=&quot;#正式特性&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="技术" scheme="https://zguishen.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="https://zguishen.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>FAR：Lone Sails</title>
    <link href="https://zguishen.com/posts/40f0407e.html"/>
    <id>https://zguishen.com/posts/40f0407e.html</id>
    <published>2023-10-22T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.381Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>I remember a different world. I am not alone.</p></blockquote><p><img src="/../images/2023/far-lone-sails.jpg"></p><p>最近在小黑盒看到这个打折的小游戏，这几年越来越喜欢玩这类小游戏，流程较短，制作精良，而且经常有让人眼前一亮的作品出现。另一个原因是3A大作实在是玩不动了，虽然说不是没时间没精力去玩，但是没有那种持续性地、几十个小时沉浸在一个游戏的耐心，没有继续玩下去的渴望，现在有人称这种现象为“电子阳痿”（当然也很多表现，这里说的只是一种）。</p><span id="more"></span><p><em>FAR: Lone Sails</em> 以末日世界为背景，主角小红人独自穿越干涸的海洋，在途中获得一辆车，一路上找油桶给车加油，给车加上风帆、换轮子、加进气口，装备灭火器和修理工具。</p><p><img src="/../images/2023/far-lone-sails-01.jpeg"></p><p>跋山涉水，行驶在在漫天星辰的夜空下，在雷雨冰雹中，在银装的雪地中，这是一场孤独的旅行，一路上没碰到其他同类，有点<a href="https://movie.douban.com/subject/27081136/">《少女的终末旅行》</a>中两位少女漫无目的地持续着旅行。</p><p>一路中会碰到各种建筑遗迹，最好玩的是还能进入一架类似星球大战中的<a href="https://www.starwars.com/databank/at-at-walker">全地形装甲步行机（AT-AT WALKER）</a>的大型机器。</p><p><img src="/../images/2023/far-lone-sails-02.jpeg"></p><p>碰上了火山爆发，拼命加速逃跑...</p><p><img src="/../images/2023/far-lone-sails-03.jpeg"></p><p>可惜车子还是受损了，动力系统被毁，只能靠风力继续前进。</p><p><img src="/../images/2023/far-lone-sails-04.jpeg"></p><p>在终点将剩下的燃料点燃一摊篝火，结束这段旅程。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;I remember a different world. I am not alone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/../images/2023/far-lone-sails.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近在小黑盒看到这个打折的小游戏，这几年越来越喜欢玩这类小游戏，流程较短，制作精良，而且经常有让人眼前一亮的作品出现。另一个原因是3A大作实在是玩不动了，虽然说不是没时间没精力去玩，但是没有那种持续性地、几十个小时沉浸在一个游戏的耐心，没有继续玩下去的渴望，现在有人称这种现象为“电子阳痿”（当然也很多表现，这里说的只是一种）。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="游戏" scheme="https://zguishen.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Panasonic LX10 &amp; Panasonic ZS110</title>
    <link href="https://zguishen.com/posts/5a820377.html"/>
    <id>https://zguishen.com/posts/5a820377.html</id>
    <published>2023-10-17T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p>一般想买卡片机的人看中的都是便携性，虽然现在的微单都在尽量往便携方向设计，但加上镜头依旧不算非常轻便。卡片机兼顾便携和比一般手机更好的画质，不过现在旗舰手机的摄影也很强了，卡片机在画质也没明显的优势了，只是在操控和可玩性更强一些。综合来说，既要非常便携，随便能装进口袋随手就能拿出来，又想要相机更多的可玩性，卡片机才值得入手。</p><span id="more"></span><p>用过的两个松下的卡片机 LX10 和 ZS110，他们有相比索尼黑卡更便宜的价格，而且松下的操控系统也好用多了。这两款相机参数不同也各有优缺点。</p><p><img src="/../images/2023/lx10.jpg"><br>LX10 F1.4-2.8 24-72mm</p><p><img src="/../images/2023/zs110.jpg"><br>ZS110 F2.8-5.9 25-250mm</p><p>LX10的焦段太局限了，卡片机拍人其实都不咋滴，LX10 也只是比 ZS110 好一些，而且小巧便携就是为了出门方便拍景，明显焦段范围更大的 ZS110 更实用些。不过 LX10 的做工比较扎实小巧，翻转屏也好使；ZS110 相对 LX10 大一点点，没有翻转屏，多了一个取景器但是太小，基本是摆设，做工一般，前面板按键真的松垮。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一般想买卡片机的人看中的都是便携性，虽然现在的微单都在尽量往便携方向设计，但加上镜头依旧不算非常轻便。卡片机兼顾便携和比一般手机更好的画质，不过现在旗舰手机的摄影也很强了，卡片机在画质也没明显的优势了，只是在操控和可玩性更强一些。综合来说，既要非常便携，随便能装进口袋随手就能拿出来，又想要相机更多的可玩性，卡片机才值得入手。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="摄影" scheme="https://zguishen.com/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>香港</title>
    <link href="https://zguishen.com/posts/78bc192a.html"/>
    <id>https://zguishen.com/posts/78bc192a.html</id>
    <published>2023-10-15T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.zguishen.com/2024/03/cf898d0b1850c67a9229bf5da786ec2b.jpg" alt="香港文化中心"></p><p>国庆前本来就打算去一趟香港的，结果错过了中旅的巴士没去成。长假过后（10月11日）重新买票过去，这才发现中旅的车是类似公交车的运营方式，买好票后自己按时上车，没有人通知，也不需要确认车牌号的，就突出一个出行简单，不打扰人。</p><span id="more"></span><p>10月9日的时候有个台风“小犬”过境香港，这名字可爱，只是下的雨可不小，11日天气开始转好，台风天过后天气凉快，也有阳光，适合出行，所以就这天过来了。</p><p>路线：尖沙咀 - 中环海滨摩天轮 - 太平山卢吉道 - 湾仔 - 文化中心&#x2F;艺术馆 - 星光大道</p><iframe src="https://www.google.com/maps/d/u/0/embed?mid=1-CzImcNpEndykatlAr1VhIkKCZCs1eQ&ehbc=2E312F" width="640" height="480"></iframe><p>7:20从东圃上车，9:00就到深圳湾口岸处境香港了，再换乘香港的巴士直接到尖沙咀中港城刚好11:00。然后就在中行的 ATM 取钱，结果死后取不了，也不知道为啥，干脆就没取了，反正已经在 iPhone 上开好了八达通，也够在香港畅通无阻了。</p><p>作为一个对探索美食没那么大兴趣的人，午餐还是选择熟悉的麦门，我知道有些人旅行其实就是为了到处吃吃吃，确实品尝美食也是旅途的一部分意义。尖沙咀天星码头附近就有一个麦当劳，而且码头入口这里刚好还有一个领取<a href="https://www.discoverhongkong.cn/china/deals/hkgoodies.html">“香港有礼”</a>的地方，香港有礼其实就是旅客消费优惠券。</p><p>做天星小轮过维多利亚港，到达港岛中环，摩天轮打下卡。中环地铁站附近，穿过皇后大道（还记得那首<a href="https://www.youtube.com/watch?v=m9v6VIj500I">皇后大道东</a>吗），到达山顶缆车，刷八达通上太平山，上山62HKD下山26HKD。到达山顶广场走卢吉道，到达卢吉道观光点，可以看到维港全貌，可惜上山天气转阴天了，拍照没那么好看了。</p><p><img src="https://i.zguishen.com/2024/03/1ba63934a86fe52ab3b40369310b903c.jpg" alt="卢吉道"></p><p>下山到银行街，顾名思义就是有很多银行，本来想去办银行卡的，但是想到现在没工作想办应该很难，就放弃了。银行街做叮叮车到湾仔码头，坐船回尖沙咀。继续打卡香港文化中心和香港艺术馆，先去看的艺术馆，可惜时间还是不够了，艺术馆共五楼看到三楼就快六点了要闭馆了，没看完。艺术馆内容其实还是岭南传统和贸易城市的一类东西，跟广州十三行博物馆有些相似，展馆本身也是由广港澳三地的博物馆单位联合设计的。</p><p><img src="https://i.zguishen.com/2024/03/e701c18df951f1a8a785174443cd26aa.jpg" alt="叮叮车"></p><p>天黑后就到维港看夜景吹海风去了，有趣的是一天中碰到好几个外国人要我帮他拍照，甚至还有是一个family十来个人的合照，，可能是因为我手上拿着相机，一个走在路上显得悠闲有时间才会被拜托帮忙拍照吧。只是我一直拍的是风光不拍人，真不会拍人，帮他们拍都是随手按下快门就完事了，英文不咋滴也没法跟他们沟通太多，我知道“good、awesome”都是礼貌而已的啦哈哈。</p><p>有人说香港已经不是以前的香港了，时代环境和政策的变动太多了，但是香港依旧还是大陆最开放最国际化的城市。关于对内地的偏见和语言的问题，由于我不怎么跟人交流，还没碰到这类现象，实在不行，干脆只说英文得了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.zguishen.com/2024/03/cf898d0b1850c67a9229bf5da786ec2b.jpg&quot; alt=&quot;香港文化中心&quot;&gt;&lt;/p&gt;
&lt;p&gt;国庆前本来就打算去一趟香港的，结果错过了中旅的巴士没去成。长假过后（10月11日）重新买票过去，这才发现中旅的车是类似公交车的运营方式，买好票后自己按时上车，没有人通知，也不需要确认车牌号的，就突出一个出行简单，不打扰人。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>麓湖公园</title>
    <link href="https://zguishen.com/posts/981511b1.html"/>
    <id>https://zguishen.com/posts/981511b1.html</id>
    <published>2023-08-25T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.zguishen.com/2023/11/c23b417c4a38c14d18e264955d00f3a8.jpg"></p><p>麓湖其实去过几次了，之前去的时候还不知道旁边有个鸿鹄楼可以爬山去看看，上面还可以拍一下市区的天际线。刚好前几天鼓捣用上了 Cloudflare R2 存储，可以随便放图片了，不用每次推到 Github 仓库里，发一下麓湖公园的一些照片。</p><span id="more"></span><p>公园有很多落羽杉，元旦左右去拍黄色树林比较好看。</p><p><img src="https://i.zguishen.com/2023/11/96f498ebdef218894af20ec1b752057a.jpg" alt="麓湖"></p><p>麓湖旁边的聚芳园，里面有个鸿鹄山。</p><p><img src="https://i.zguishen.com/2023/11/ee524c292a19732c499b02a0bb3dfc1f.jpg" alt="鸿鹄山牌坊"></p><p>鸿鹄楼在山上。</p><p><img src="https://i.zguishen.com/2023/11/ac97cd1a466f440906e201844d582abe.jpg" alt="鸿鹄楼"></p><p>爬山十分钟到达山上，拍天际线。</p><p><img src="https://i.zguishen.com/2023/11/538becf83da05bada9ee614ec1debdff.jpg" alt="天际线"></p><p>在傍晚时分来可以拍日落。</p><p><img src="https://i.zguishen.com/2023/11/c765e01f1004b07950313592bae5a155.jpg" alt="日落"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.zguishen.com/2023/11/c23b417c4a38c14d18e264955d00f3a8.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;麓湖其实去过几次了，之前去的时候还不知道旁边有个鸿鹄楼可以爬山去看看，上面还可以拍一下市区的天际线。刚好前几天鼓捣用上了 Cloudflare R2 存储，可以随便放图片了，不用每次推到 Github 仓库里，发一下麓湖公园的一些照片。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
    <category term="摄影" scheme="https://zguishen.com/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>火炉山</title>
    <link href="https://zguishen.com/posts/dcc4c58d.html"/>
    <id>https://zguishen.com/posts/dcc4c58d.html</id>
    <published>2023-07-12T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p>上周四（7月3日）到火炉山去转了一圈，下午35℃的天气，居然还有不少像我一样的傻瓜去爬山的。其实当时是想去华快观光点拍一个广州三件套，需要在天气好空气质量好的时候才拍得清晰一些，本来以为当天能见度已经很不错了，不过当爬到山上远看还是有些雾霾。</p><span id="more"></span><p><img src="https://i.zguishen.com/2023/11/bba9e4e34583276cc489dff2cbeed86a.jpg" alt="华快-72mm"></p><p><img src="https://i.zguishen.com/2023/11/e5a945e463a1b4c9a235960043a08507.jpg" alt="华快-裁剪"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;上周四（7月3日）到火炉山去转了一圈，下午35℃的天气，居然还有不少像我一样的傻瓜去爬山的。其实当时是想去华快观光点拍一个广州三件套，需要在天气好空气质量好的时候才拍得清晰一些，本来以为当天能见度已经很不错了，不过当爬到山上远看还是有些雾霾。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
    <category term="摄影" scheme="https://zguishen.com/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>铃芽之旅 すずめの戸締まり</title>
    <link href="https://zguishen.com/posts/8a8292d1.html"/>
    <id>https://zguishen.com/posts/8a8292d1.html</id>
    <published>2023-07-02T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/2023/p2887651295.webp"></p><blockquote><p>我想要活下去，想听见你的声音。</p></blockquote><span id="more"></span><p>新海诚电影风格一直以来都是以精美的制作画面和青春男女的 相遇相知  相爱或相忘的故事吸引人的，从十几年前的<a href="https://movie.douban.com/subject/2043546/">《秒速五厘米》</a>和<a href="https://movie.douban.com/subject/20470074/">《言叶之庭》</a>到近些年<a href="https://movie.douban.com/subject/26683290/">《你的名字。》</a>和<a href="https://movie.douban.com/subject/30402296/">《天气之子》</a>，不仅能看到制作水平的进步，剧本的风格转变。尤其以《你的名字。》的成功，让新海诚这块招牌打得愈加响亮。不过，这次的《铃芽之旅》打破了人们以往对新海诚电影的固有印象，电影要表达的有更多的东西，但是也有很多批评，我个人总体来说《铃芽之旅》相比较《你的名字。》的表现差。</p><p>电影四月份上映的时候就去影院看了，一开始先入为主，以为是新海诚传统的电影风格，又一个男女爱情故事，可是越往后面看越觉得感情线好像不是那么重要。</p><p>故事开始是女主铃芽无意中拔出要石，引发灾厄，要石变成白猫（大臣），诅咒草太肉体消失附身在三腿小座椅上。随后草太为了抓住大臣变回人形，一路跟随大臣的逃跑路线开启了一边抓猫一边关闭沿途被打开的后门的旅程。总体看下来这部电影既像爱情片又像公路片，也可以是纪念地震的。事实上，我认为纪念地震才是电影的主题，这就导致我在影院看的时候觉得观感很差，各条主题线混杂在一起，但是新海诚明显没处理好。而且电影里细节很多但又不明显，需要对日本的地震史（<a href="https://zh.wikipedia.org/zh-cn/%E6%9D%B1%E6%97%A5%E6%9C%AC%E5%A4%A7%E9%9C%87%E7%81%BD">东日本大震灾</a>）有了解一些，白猫黑猫又代表什么，动机是什么，只看一遍很难理解，现在电影在流媒体上线了重新看了一遍，才看到了更多的细节。</p><p>首先说感情线，很多人都觉得男女主的情感发展很奇怪。电影开头铃芽觉得见过草太这里呼应了结尾在长世小铃芽遇见了男女主，后续草太变成椅子就奇怪起来了，从一只椅子去了解一个人太抽象了，而且一路上两人在做的都是关门师的任务，更像干活的同事。</p><p>不过对铃芽人物的刻画就好多了，叛逆、活泼又勇敢的女高中生。不过也许有的人更喜欢神明化身的猫，大臣的形象真的讨喜。铃芽把要石拔出来，大臣作为要石镇压灾厄的使命也完成了，并且使命转移到了关门师草太身上。大臣喜欢铃芽，而铃芽因为自己错误拔出要石而导致草太要作为要石牺牲，决心要救草太，这样就形成影片的故事冲突点。最终大臣被铃芽感动愿意重新化为要石镇压灾厄，也许是明白铃芽并不是真正意义上的喜欢自己，也许是明白身为神明的职责，这种二选一的剧情，看得还是让人难受的。</p><p>说回我认为的真正主题，影片的立意为了纪念地震，众所周知，日本是一个地震灾害多发的国家，自古以来饱受地震的影响。人们时时祈求神明的保佑，影片中提到“思念的重量，能够镇压住这片土地，有些地方已经被人们遗忘了，促使后门被打开。”神明人们的信仰而存在，当被人遗忘了就没法镇压土地，所以要思而复思，时刻感谢日不见之神的恩赐。同时，也要求人们要勇敢面对灾难，永远不放弃对生的渴望。铃芽最后把凳子给小时候的自己作为与过去告别，放下过去的伤痛，回到生活中，去体验爱情（与草太），珍惜活着的亲人朋友（姑姑岩户环），互相帮助有需要的人们（民宿店的千果，酒馆的老板瑠美）。</p><p>随手的写的感想，看起来很乱，思路也是乱的，网络上已经有很多人写了很多思路清晰的影评，比如可以看看这两篇影评：</p><ul><li><a href="https://movie.douban.com/review/15046115/">新海诚突破自我的大进阶！解析《铃芽之旅》的社会议题与关键细节</a></li><li><a href="https://k.sina.com.cn/article_6324864954_178fdc7ba01901gm9a.html">《铃芽之旅》：灾难和废墟叙事后的治愈</a></li><li><a href="https://www.zhihu.com/question/591721809/answer/2958026089">《铃芽之旅》最后想表达的是什么？ - Patchouli Exarch的回答 - 知乎</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/2023/p2887651295.webp&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想要活下去，想听见你的声音。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="影视" scheme="https://zguishen.com/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>小米R3G 解锁 SSH 和刷 Padavan 及启用 Clash</title>
    <link href="https://zguishen.com/posts/f3b92be9.html"/>
    <id>https://zguishen.com/posts/f3b92be9.html</id>
    <published>2023-06-05T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p>之前用的路由器性能太差了，带宽也太小了，连开个串流都费劲，所以想买个新的。现在的千兆 WiFi6 路由器也都普及了，只是我是一个人住房间小实在用不上那么好的路由器，所以在多多花50几块钱淘了个小米R3G，配置双千兆 + 128M闪存 + 256M内存 + USB3.0，刷机也比较简单，也能用上科学上网插件，足够用了。</p><span id="more"></span><p>要用到的资源的地址：</p><ul><li>小米路由器官网：<a href="http://www1.miwifi.com/">http://www1.miwifi.com/</a> </li><li>Bootloader 固件 Breed：<a href="https://breed.hackpascal.net/">https://breed.hackpascal.net/</a> </li><li>Padavan 固件：<a href="https://opt.cn2qq.com/padavan/">https://opt.cn2qq.com/padavan/</a></li></ul><h3 id="刷开发版固件"><a href="#刷开发版固件" class="headerlink" title="刷开发版固件"></a>刷开发版固件</h3><p>解锁 SSH 需要先刷开发版固件，先到小米路由器官网 - 下载 - ROM，找到对应的开发版固件下载下来（<a href="https://bigota.miwifi.com/xiaoqiang/rom/r3g/miwifi_r3g_firmware_12f97_2.25.124.bin">miwifi_r3g_firmware_12f97_2.25.124.bin</a>）。</p><p>然后按照以下步骤刷入开发版固件：</p><ul><li>开发版ROM 包复制到 FAT 或 FAT32 格式U盘的根目录，并重命名为 miwifi.bin ，同时确保该目录下不存在其它“.bin”文件，若存在会导致刷机失败；</li><li>断开小米路由器的电源，将U盘插入路由器USB接口；</li><li>按住 reset 键，接通电源，等待指示灯变为黄色闪烁状态后松开 reset 键（大概十来秒），路由器开始刷机；</li><li>完成后系统会自动重启。路由器指示灯变蓝刷机完成；如果出现异常、失败、U盘无法读取的状况，会进入红灯状态，建议重试或更换U盘再试。</li></ul><h3 id="解锁SSH"><a href="#解锁SSH" class="headerlink" title="解锁SSH"></a>解锁SSH</h3><p>小米路由器官网 - 开放 - 开启 SSH 工具，下载解锁 SSH 工具包，记下 root 密码。这里需要绑定小米账号才能下载，PC 浏览器下载无反应的话用手机去下载。</p><p>确保工具包文件名为 miwifi_ssh.bin，操作过程同刷开发版，确保U盘只有 miwifi_ssh.bin 文件，断电插入U盘，按 reset 通电黄灯闪烁松开等待解锁完成。</p><p>解锁完成就能进入路由器内部系统了，由于固件比较老，如果碰到错误 <code>Unable to negotiate with 192.168.31.1 port 22: no matching key exchange method found. Their offer: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1</code>，如果指定 diffie-hellman-group1-sha1 还有错误 <code>Unable to negotiate with 192.168.31.1 port 22: no matching host key type found. Their offer: ssh-rsa,ssh-dss</code>，SSH登录指定下加密算法登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -oHostKeyAlgorithms=+ssh-dss root@192.168.31.1</span><br></pre></td></tr></table></figure><p><img src="/../images/2023/screenshot-2023-06-06-20-03-57.png"></p><h3 id="刷入Breed"><a href="#刷入Breed" class="headerlink" title="刷入Breed"></a>刷入Breed</h3><p><a href="https://breed.hackpascal.net/">https://breed.hackpascal.net/</a> 下载对应版本固件（<a href="https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin">breed-mt7621-xiaomi-r3g.bin</a>），上传到路由器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -oKexAlgorithms=+diffie-hellman-group1-sha1 -oHostKeyAlgorithms=+ssh-dss ~/Download/breed-mt7621-xiaomi-r3g.bin root@192.168.31.1:/tmp</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mtd -r write /tmp/breed-mt7621-xiaomi-r3g.bin Bootloader</span><br></pre></td></tr></table></figure><p>成功后自动重启。</p><p><a href="https://opt.cn2qq.com/padavan/">https://opt.cn2qq.com/padavan/</a> 搜索MI-R3G下载对应固件。</p><p>随后将路由器断电，按住小米路由器reset键不放，上电等待小米指示灯开始闪烁，再松开 reset 键，即进入 breed 控制台模式。网线连接访问 <a href="http://192.168.1.1/">http://192.168.1.1</a> 即可打开breed控制台。</p><h3 id="刷入Padavan"><a href="#刷入Padavan" class="headerlink" title="刷入Padavan"></a>刷入Padavan</h3><p>在breed控制台直接上传 Padavan 固件就行了，刷入成功后访问路由器后台<a href="http://192.168.123.1,默认密码是/">http://192.168.123.1，默认密码是</a> admin&#x2F;admin。</p><p>高级设置-外部网络（WAN）设置宽带上网。</p><p>高级设置-系统管理-服务，启用SSH服务。</p><p>扩展功能-搭建 Web环境设置 clash，如果用上 Vision 和 Reality 协议需要选择 meta 内核，然后有订阅的填上订阅地址，自己写配置文件的，点击“点击按钮显示主配置文件”的选项，把自己配置粘贴进去，点击应用本页面配置等待启动。<br><img src="/../images/2023/screenshot-2023-06-06-20-54-07.png"></p><p>等待启动成功点击 Web 管理界面就能看到面板了。</p><p><img src="/../images/2023/screenshot-2023-06-06-20-58-00.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前用的路由器性能太差了，带宽也太小了，连开个串流都费劲，所以想买个新的。现在的千兆 WiFi6 路由器也都普及了，只是我是一个人住房间小实在用不上那么好的路由器，所以在多多花50几块钱淘了个小米R3G，配置双千兆 + 128M闪存 + 256M内存 + USB3.0，刷机也比较简单，也能用上科学上网插件，足够用了。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://zguishen.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Router" scheme="https://zguishen.com/tags/Router/"/>
    
  </entry>
  
  <entry>
    <title>澳门</title>
    <link href="https://zguishen.com/posts/91d1d215.html"/>
    <id>https://zguishen.com/posts/91d1d215.html</id>
    <published>2023-04-27T16:00:00.000Z</published>
    <updated>2025-07-20T14:54:22.380Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.zguishen.com/2024/03/f1f14e3ac8a815d2d47badfe7d8a6abe.jpg" alt="大三巴"></p><p>前段时间因为身份证快过期了，要拍照拿回执随便把护照和港澳通行证回执一起做了，顺手把护照和港澳通行证都一起办了。既然拿了护照和通行证，就在小红书查了下几个旅行地方，才发现广州去澳门其实很快，来次澳门一日游居然这么方便！</p><span id="more"></span><p>珠三角的短途客运非常发达，一张往返广州和澳门的大巴车票只要¥49，早上出发约两个小时就到珠海拱北口岸了。出入境都各自需要填一次健康信息，带上通行证就可以进入澳门了。入境前或者进去之后可以换些葡币，如果需要做公交或者其他消费的话，不过大多数情况下都可以用支付宝微信付钱。做公交最好就换点钱，用人民币投币会亏些汇率，白嫖发财车就不用花钱了，不过发财车只往返各酒店和口岸。</p><p>第一次去没怎么做准备，主要在半岛乱逛，然后坐发财车到威尼斯人转一下就回家了。</p><p>路线：拱北口岸 - 十六浦酒店 - 议事亭前地 - 玫瑰圣母堂 - 大三巴牌坊 - 大炮台 - 澳门博物馆 - 东望洋灯塔 - 渔人码头 - 威尼斯人 - 关闸（拱北）</p><iframe src="https://www.google.com/maps/d/u/0/embed?mid=1zMyPssWLfdH3gm_zQLABqoc9CrHNmyA&ehbc=2E312F" width="640" height="480"></iframe><p>在澳门交通可以白嫖发财车，吃饭也可以到各大赌场酒店里白嫖，注册赌场会员就会送饭送奶茶啥的，如果只是想填饱肚子就行可以去白嫖，想吃美食还是花钱吧，旅行还是花钱舒服点好。</p><p>说到澳门最大的特色那当然是赌场了，我跟着大爷大妈一起进赌场结果被拦下查年龄了，进赌场需要21岁，估计是背个书包太像学生了。威尼斯人里面真的够豪华的，赌的人也够多了，你去赌场免费做的发财车，在赌场里免费的奶茶，其实是这些赌...狗都替你买单了😹。</p><p>澳门最著名的景点就数大三巴了，最高建筑新葡京大厦，其他大大小小的景点也非常多。澳门博物馆里面没什么东西，毕竟只是个小地方，历史能讲的东西也少。</p><p>打算下次去澳门再去氹仔那边逛逛，不过出境后再次入境需要相隔两个月才能再次入境。</p><h2 id="2024-x2F-05-x2F-15-路环一日旅行"><a href="#2024-x2F-05-x2F-15-路环一日旅行" class="headerlink" title="2024&#x2F;05&#x2F;15 路环一日旅行"></a>2024&#x2F;05&#x2F;15 路环一日旅行</h2><p>一开始是准备订票然后隔天出发的，但是巴士票居然全部卖光了，这还是工作日，每次出门看到那么多年轻人有点难崩，所以车票是提前好几天买的，15号出发。工作日出门还是挺顺畅的，7点出门9点半就过关到澳门了。</p><p>澳门的公交还没有像香港八达通那样方便可以在 iPhone 开个八达通就行，虽然支付宝支持了但是我还是用 MPay，MPay 能半价一次3元支付宝是6元，没有澳门的银行卡能充值的话可以在咸鱼收点余额就行了。过青茂海关做26A路巴士就可以直接到路环了，巴士的提示语音是4语播放，国语&#x2F;粤语&#x2F;英语&#x2F;葡语，有句葡语提示音听起来是“咕噜咕噜猫”挺好玩的，查了一下是“Por favor segure o corrimão”，即“请紧握扶手”的意思。</p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC02893_hu94f064f51fe78ee5d32e17422038c0df_491526_filter_10933573887768330671.jpg" alt="路环码头"></p><p>刚好这天是四月八，本地有庆典活动，三节（鱼行醉龙节、 谭公诞及 浴佛节）同期举行。不过我对这些活动不太感冒，看了会舞狮就去吃饭了。午饭是鱼翅面，很贵，纯粹是没吃过想试试，虽然我没有什么道德压力，但是真的不算好吃啊，就图个稀奇。</p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC02889_hu09932a1c7ab0b0a6f8f61609d5f7c8fe_489670_filter_10933573887768330671.jpg"></p><p>吃完饭之后沿着海岸走龙爪角步行径到黑沙海滩，可惜天气不够好，都没怎么拍照。到了黑沙海滩发现海滩都是黄沙，只有在靠海里边边才能看到黑沙，<a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E6%B2%99%E6%B5%B7%E7%81%98">维基</a>上说是水土流失，为了避免沙滩消失所以用了黄沙做补充。</p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC02989_huddd34e264a6716cdf57ff94dae641f56_418583_filter_10933573887768330671.jpg" alt="龙爪角步行径"></p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC03078_hu474ac850a4b0b33e52cbe2dbdb63fb9b_502992_filter_10933573887768330671.jpg" alt="黑沙海滩"></p><p>之后做公交前往小潭山观景台，有个小误解是港澳的公交需要招手才停车，其实就是举下手就行，别挥手，挥手司机会以为你是在拦的士不鸟你直接走了。小潭山观景台在公交站直接做电梯上去就行，这里同样是个吃天气的机位。</p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC03121-%E7%BC%96%E8%BE%91_hued4842facb13654b697bd7c363caefc4_445941_filter_10933573887768330671.jpg" alt="小潭山观景台"></p><p>小潭山下来之后就开始回程了，顺便打卡了一下东望洋的机位和大三巴，这次来没去赌场，不会赌不去，为了那些免费饮品感觉没必要。</p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC03142_hub640d7198ff72f0247d70a4dc2881ed9_412610_filter_10933573887768330671.jpg" alt="东望洋新街"></p><p><img src="https://gallery.zguishen.com/daily/20240515-DSC03190_hu5b92184427442755bef04789e87f2bbd_452826_filter_10933573887768330671.jpg" alt="大三巴"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.zguishen.com/2024/03/f1f14e3ac8a815d2d47badfe7d8a6abe.jpg&quot; alt=&quot;大三巴&quot;&gt;&lt;/p&gt;
&lt;p&gt;前段时间因为身份证快过期了，要拍照拿回执随便把护照和港澳通行证回执一起做了，顺手把护照和港澳通行证都一起办了。既然拿了护照和通行证，就在小红书查了下几个旅行地方，才发现广州去澳门其实很快，来次澳门一日游居然这么方便！&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://zguishen.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="旅行" scheme="https://zguishen.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
</feed>
